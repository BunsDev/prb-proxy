{
  "id": "fc774bce466fff1e2dde480d3ae9f188",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.12",
  "solcLongVersion": "0.8.12+commit.f00d7308",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/IPRBProxy.sol": {
        "content": "// SPDX-License-Identifier: Unlicense\npragma solidity >=0.8.4;\n\n/// @title IPRBProxy\n/// @author Paul Razvan Berg\n/// @notice Proxy contract to compose transactions on owner's behalf.\ninterface IPRBProxy {\n    /// EVENTS ///\n\n    event Execute(address indexed target, bytes data, bytes response);\n\n    event TransferOwnership(address indexed oldOwner, address indexed newOwner);\n\n    /// PUBLIC CONSTANT FUNCTIONS ///\n\n    /// @notice Returns a boolean flag that indicates whether the envoy has permission to call the given target\n    /// contract and function selector.\n    function getPermission(\n        address envoy,\n        address target,\n        bytes4 selector\n    ) external view returns (bool);\n\n    /// @notice The address of the owner account or contract.\n    function owner() external view returns (address);\n\n    /// @notice How much gas to reserve for running the remainder of the \"execute\" function after the DELEGATECALL.\n    /// @dev This prevents the proxy from becoming unusable if EVM opcode gas costs change in the future.\n    function minGasReserve() external view returns (uint256);\n\n    /// PUBLIC NON-CONSTANT FUNCTIONS ///\n\n    /// @notice Delegate calls to the target contract by forwarding the call data. Returns the data it gets back,\n    /// including when the contract call reverts with a reason or custom error.\n    ///\n    /// @dev Requirements:\n    /// - The caller must be either an owner or an envoy.\n    /// - `target` must be a deployed contract.\n    /// - The owner cannot be changed during the DELEGATECALL.\n    ///\n    /// @param target The address of the target contract.\n    /// @param data Function selector plus ABI encoded data.\n    /// @return response The response received from the target contract.\n    function execute(address target, bytes calldata data) external payable returns (bytes memory response);\n\n    /// @notice Gives or takes a permission from an envoy to call the given target contract and function selector\n    /// on behalf of the owner.\n    /// @dev It is not an error to reset a permission on the same (envoy,target,selector) tuple multiple types.\n    ///\n    /// Requirements:\n    /// - The caller must be the owner.\n    ///\n    /// @param envoy The address of the envoy account.\n    /// @param target The address of the target contract.\n    /// @param selector The 4 byte function selector on the target contract.\n    /// @param permission The boolean permission to set.\n    function setPermission(\n        address envoy,\n        address target,\n        bytes4 selector,\n        bool permission\n    ) external;\n\n    /// @notice Transfers the owner of the contract to a new account.\n    /// @dev Requirements:\n    /// - The caller must be the owner.\n    /// @param newOwner The address of the new owner account.\n    function transferOwnership(address newOwner) external;\n}\n"
      },
      "contracts/PRBProxyRegistry.sol": {
        "content": "// SPDX-License-Identifier: Unlicense\npragma solidity >=0.8.4;\n\nimport \"./IPRBProxy.sol\";\nimport \"./IPRBProxyFactory.sol\";\nimport \"./IPRBProxyRegistry.sol\";\n\n/// @notice Emitted when a proxy already exists for the given owner.\nerror PRBProxyRegistry__ProxyAlreadyExists(address owner);\n\n/// @title PRBProxyRegistry\n/// @author Paul Razvan Berg\ncontract PRBProxyRegistry is IPRBProxyRegistry {\n    /// PUBLIC STORAGE ///\n\n    /// @inheritdoc IPRBProxyRegistry\n    IPRBProxyFactory public override factory;\n\n    /// INTERNAL STORAGE ///\n\n    /// @notice Internal mapping of owners to current proxies.\n    mapping(address => IPRBProxy) internal currentProxies;\n\n    /// CONSTRUCTOR ///\n\n    constructor(IPRBProxyFactory factory_) {\n        factory = factory_;\n    }\n\n    /// PUBLIC CONSTANT FUNCTIONS ///\n\n    /// @inheritdoc IPRBProxyRegistry\n    function getCurrentProxy(address owner) external view override returns (IPRBProxy proxy) {\n        proxy = currentProxies[owner];\n    }\n\n    /// PUBLIC NON-CONSTANT FUNCTIONS ///\n\n    /// @inheritdoc IPRBProxyRegistry\n    function deploy() external override returns (address payable proxy) {\n        proxy = deployFor(msg.sender);\n    }\n\n    /// @inheritdoc IPRBProxyRegistry\n    function deployFor(address owner) public override returns (address payable proxy) {\n        IPRBProxy currentProxy = currentProxies[owner];\n\n        // Do not deploy if the proxy already exists and the owner is the same.\n        if (address(currentProxy) != address(0) && currentProxy.owner() == owner) {\n            revert PRBProxyRegistry__ProxyAlreadyExists(owner);\n        }\n\n        // Deploy the proxy via the factory.\n        proxy = factory.deployFor(owner);\n\n        // Set or override the current proxy for the owner.\n        currentProxies[owner] = IPRBProxy(proxy);\n    }\n}\n"
      },
      "contracts/IPRBProxyFactory.sol": {
        "content": "// SPDX-License-Identifier: Unlicense\npragma solidity >=0.8.4;\n\n/// @title IPRBProxyFactory\n/// @author Paul Razvan Berg\n/// @notice Deploys new proxies with CREATE2.\ninterface IPRBProxyFactory {\n    /// EVENTS ///\n\n    event DeployProxy(\n        address indexed origin,\n        address indexed deployer,\n        address indexed owner,\n        bytes32 seed,\n        bytes32 salt,\n        address proxy\n    );\n\n    /// PUBLIC CONSTANT FUNCTIONS ///\n\n    /// @notice Gets the next seed that will be used to deploy the proxy.\n    /// @param eoa The externally owned account that will own the proxy.\n    function getNextSeed(address eoa) external view returns (bytes32 result);\n\n    /// @notice Mapping to track all deployed proxies.\n    /// @param proxy The address of the proxy to make the check for.\n    function isProxy(address proxy) external view returns (bool result);\n\n    /// @notice The release version of PRBProxy.\n    /// @dev This is stored in the factory rather than the proxy to save gas for end users.\n    function version() external view returns (uint256);\n\n    /// PUBLIC NON-CONSTANT FUNCTIONS ///\n\n    /// @notice Deploys a new proxy via CREATE2.\n    /// @dev Sets \"msg.sender\" as the owner of the proxy.\n    /// @return proxy The address of the newly deployed proxy contract.\n    function deploy() external returns (address payable proxy);\n\n    /// @notice Deploys a new proxy via CREATE2, for the given owner.\n    /// @param owner The owner of the proxy.\n    /// @return proxy The address of the newly deployed proxy contract.\n    function deployFor(address owner) external returns (address payable proxy);\n}\n"
      },
      "contracts/IPRBProxyRegistry.sol": {
        "content": "// SPDX-License-Identifier: Unlicense\npragma solidity >=0.8.4;\n\nimport \"./IPRBProxy.sol\";\nimport \"./IPRBProxyFactory.sol\";\n\n/// @title IPRBProxyRegistry\n/// @author Paul Razvan Berg\n/// @notice Deploys new proxies via the factory and keeps a registry of owners to proxies. Owners can only\n/// have one proxy at a time.\ninterface IPRBProxyRegistry {\n    /// PUBLIC CONSTANT FUNCTIONS ///\n\n    /// @notice Address of the proxy factory contract.\n    function factory() external view returns (IPRBProxyFactory proxyFactory);\n\n    /// @notice Gets the current proxy of the given owner.\n    /// @param owner The address of the owner of the current proxy.\n    function getCurrentProxy(address owner) external view returns (IPRBProxy proxy);\n\n    /// PUBLIC NON-CONSTANT FUNCTIONS ///\n\n    /// @notice Deploys a new proxy instance via the proxy factory.\n    /// @dev Sets \"msg.sender\" as the owner of the proxy.\n    ///\n    /// Requirements:\n    /// - All from \"deployFor\".\n    ///\n    /// @return proxy The address of the newly deployed proxy contract.\n    function deploy() external returns (address payable proxy);\n\n    /// @notice Deploys a new proxy instance via the proxy factory, for the given owner.\n    ///\n    /// @dev Requirements:\n    /// - The proxy must either not exist or its ownership must have been transferred by the owner.\n    ///\n    /// @param owner The owner of the proxy.\n    /// @return proxy The address of the newly deployed proxy contract.\n    function deployFor(address owner) external returns (address payable proxy);\n}\n"
      },
      "contracts/PRBProxyFactory.sol": {
        "content": "// SPDX-License-Identifier: Unlicense\npragma solidity >=0.8.4;\n\nimport \"./IPRBProxy.sol\";\nimport \"./IPRBProxyFactory.sol\";\nimport \"./PRBProxy.sol\";\n\n/// @title PRBProxyFactory\n/// @author Paul Razvan Berg\ncontract PRBProxyFactory is IPRBProxyFactory {\n    /// PUBLIC STORAGE ///\n\n    /// @inheritdoc IPRBProxyFactory\n    uint256 public constant override version = 2;\n\n    /// INTERNAL STORAGE ///\n\n    /// @dev Internal mapping to track all deployed proxies.\n    mapping(address => bool) internal proxies;\n\n    /// @dev Internal mapping to track the next seed to be used by an EOA.\n    mapping(address => bytes32) internal nextSeeds;\n\n    /// PUBLIC CONSTANT FUNCTIONS ///\n\n    /// @inheritdoc IPRBProxyFactory\n    function getNextSeed(address eoa) external view override returns (bytes32 nextSeed) {\n        nextSeed = nextSeeds[eoa];\n    }\n\n    /// @inheritdoc IPRBProxyFactory\n    function isProxy(address proxy) external view override returns (bool result) {\n        result = proxies[proxy];\n    }\n\n    /// PUBLIC NON-CONSTANT FUNCTIONS ///\n\n    /// @inheritdoc IPRBProxyFactory\n    function deploy() external override returns (address payable proxy) {\n        proxy = deployFor(msg.sender);\n    }\n\n    /// @inheritdoc IPRBProxyFactory\n    function deployFor(address owner) public override returns (address payable proxy) {\n        bytes32 seed = nextSeeds[tx.origin];\n\n        // Prevent front-running the salt by hashing the concatenation of \"tx.origin\" and the user-provided seed.\n        bytes32 salt = keccak256(abi.encode(tx.origin, seed));\n\n        // Deploy the proxy with CREATE2.\n        proxy = payable(new PRBProxy{ salt: salt }());\n\n        // Transfer the ownership from this factory contract to the specified owner.\n        IPRBProxy(proxy).transferOwnership(owner);\n\n        // Mark the proxy as deployed.\n        proxies[proxy] = true;\n\n        // Increment the seed.\n        unchecked {\n            nextSeeds[tx.origin] = bytes32(uint256(seed) + 1);\n        }\n\n        // Log the proxy via en event.\n        emit DeployProxy(tx.origin, msg.sender, owner, seed, salt, address(proxy));\n    }\n}\n"
      },
      "contracts/PRBProxy.sol": {
        "content": "// SPDX-License-Identifier: Unlicense\npragma solidity >=0.8.4;\n\nimport \"./IPRBProxy.sol\";\n\n/// @notice Emitted when the caller is not the owner.\nerror PRBProxy__ExecutionNotAuthorized(address owner, address caller, address target, bytes4 selector);\n\n/// @notice Emitted when execution reverted with no reason.\nerror PRBProxy__ExecutionReverted();\n\n/// @notice Emitted when the caller is not the owner.\nerror PRBProxy__NotOwner(address owner, address caller);\n\n/// @notice Emitted when the owner is changed during the DELEGATECALL.\nerror PRBProxy__OwnerChanged(address originalOwner, address newOwner);\n\n/// @notice Emitted when passing an EOA or an undeployed contract as the target.\nerror PRBProxy__TargetInvalid(address target);\n\n/// @title PRBProxy\n/// @author Paul Razvan Berg\ncontract PRBProxy is IPRBProxy {\n    /// PUBLIC STORAGE ///\n\n    /// @inheritdoc IPRBProxy\n    address public override owner;\n\n    /// @inheritdoc IPRBProxy\n    uint256 public override minGasReserve;\n\n    /// INTERNAL STORAGE ///\n\n    /// @notice Maps envoys to target contracts to function selectors to boolean flags.\n    mapping(address => mapping(address => mapping(bytes4 => bool))) internal permissions;\n\n    /// CONSTRUCTOR ///\n\n    constructor() {\n        minGasReserve = 5_000;\n        owner = msg.sender;\n        emit TransferOwnership(address(0), msg.sender);\n    }\n\n    /// FALLBACK FUNCTION ///\n\n    /// @dev Called when Ether is sent and the call data is empty.\n    receive() external payable {}\n\n    /// PUBLIC CONSTANT FUNCTIONS ///\n\n    /// @inheritdoc IPRBProxy\n    function getPermission(\n        address envoy,\n        address target,\n        bytes4 selector\n    ) external view override returns (bool) {\n        return permissions[envoy][target][selector];\n    }\n\n    /// PUBLIC NON-CONSTANT FUNCTIONS ///\n\n    /// @inheritdoc IPRBProxy\n    function execute(address target, bytes calldata data) external payable override returns (bytes memory response) {\n        // Check that the caller is either the owner or an envoy.\n        if (owner != msg.sender) {\n            bytes4 selector;\n            assembly {\n                selector := calldataload(data.offset)\n            }\n            if (!permissions[msg.sender][target][selector]) {\n                revert PRBProxy__ExecutionNotAuthorized(owner, msg.sender, target, selector);\n            }\n        }\n\n        // Check that the target is a valid contract.\n        if (target.code.length == 0) {\n            revert PRBProxy__TargetInvalid(target);\n        }\n\n        // Save the owner address in memory. This local variable cannot be modified during the DELEGATECALL.\n        address owner_ = owner;\n\n        // Reserve some gas to ensure that the function has enough to finish the execution.\n        uint256 stipend = gasleft() - minGasReserve;\n\n        // Delegate call to the target contract.\n        bool success;\n        (success, response) = target.delegatecall{ gas: stipend }(data);\n\n        // Check that the owner has not been changed.\n        if (owner_ != owner) {\n            revert PRBProxy__OwnerChanged(owner_, owner);\n        }\n\n        // Log the execution.\n        emit Execute(target, data, response);\n\n        // Check if the call was successful or not.\n        if (!success) {\n            // If there is return data, the call reverted with a reason or a custom error.\n            if (response.length > 0) {\n                assembly {\n                    let returndata_size := mload(response)\n                    revert(add(32, response), returndata_size)\n                }\n            } else {\n                revert PRBProxy__ExecutionReverted();\n            }\n        }\n    }\n\n    /// @inheritdoc IPRBProxy\n    function setPermission(\n        address envoy,\n        address target,\n        bytes4 selector,\n        bool permission\n    ) external override {\n        if (owner != msg.sender) {\n            revert PRBProxy__NotOwner(owner, msg.sender);\n        }\n        permissions[envoy][target][selector] = permission;\n    }\n\n    /// @inheritdoc IPRBProxy\n    function transferOwnership(address newOwner) external override {\n        address oldOwner = owner;\n        if (oldOwner != msg.sender) {\n            revert PRBProxy__NotOwner(oldOwner, msg.sender);\n        }\n        owner = newOwner;\n        emit TransferOwnership(oldOwner, newOwner);\n    }\n}\n"
      }
    },
    "settings": {
      "metadata": {
        "bytecodeHash": "none"
      },
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/IPRBProxy.sol": {
        "IPRBProxy": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "name": "Execute",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "TransferOwnership",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "envoy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getPermission",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minGasReserve",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "envoy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                },
                {
                  "internalType": "bool",
                  "name": "permission",
                  "type": "bool"
                }
              ],
              "name": "setPermission",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "execute(address,bytes)": "1cff79cd",
              "getPermission(address,address,bytes4)": "da8d882c",
              "minGasReserve()": "9d159568",
              "owner()": "8da5cb5b",
              "setPermission(address,address,bytes4,bool)": "e64624fa",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"Execute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"envoy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minGasReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"envoy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"permission\",\"type\":\"bool\"}],\"name\":\"setPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{\"execute(address,bytes)\":{\"details\":\"Requirements: - The caller must be either an owner or an envoy. - `target` must be a deployed contract. - The owner cannot be changed during the DELEGATECALL.\",\"params\":{\"data\":\"Function selector plus ABI encoded data.\",\"target\":\"The address of the target contract.\"},\"returns\":{\"response\":\"The response received from the target contract.\"}},\"minGasReserve()\":{\"details\":\"This prevents the proxy from becoming unusable if EVM opcode gas costs change in the future.\"},\"setPermission(address,address,bytes4,bool)\":{\"details\":\"It is not an error to reset a permission on the same (envoy,target,selector) tuple multiple types. Requirements: - The caller must be the owner.\",\"params\":{\"envoy\":\"The address of the envoy account.\",\"permission\":\"The boolean permission to set.\",\"selector\":\"The 4 byte function selector on the target contract.\",\"target\":\"The address of the target contract.\"}},\"transferOwnership(address)\":{\"details\":\"Requirements: - The caller must be the owner.\",\"params\":{\"newOwner\":\"The address of the new owner account.\"}}},\"title\":\"IPRBProxy\",\"version\":1},\"userdoc\":{\"events\":{\"Execute(address,bytes,bytes)\":{\"notice\":\"EVENTS ///\"}},\"kind\":\"user\",\"methods\":{\"execute(address,bytes)\":{\"notice\":\"Delegate calls to the target contract by forwarding the call data. Returns the data it gets back, including when the contract call reverts with a reason or custom error.\"},\"getPermission(address,address,bytes4)\":{\"notice\":\"Returns a boolean flag that indicates whether the envoy has permission to call the given target contract and function selector.\"},\"minGasReserve()\":{\"notice\":\"How much gas to reserve for running the remainder of the \\\"execute\\\" function after the DELEGATECALL.\"},\"owner()\":{\"notice\":\"The address of the owner account or contract.\"},\"setPermission(address,address,bytes4,bool)\":{\"notice\":\"Gives or takes a permission from an envoy to call the given target contract and function selector on behalf of the owner.\"},\"transferOwnership(address)\":{\"notice\":\"Transfers the owner of the contract to a new account.\"}},\"notice\":\"Proxy contract to compose transactions on owner's behalf.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPRBProxy.sol\":\"IPRBProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/IPRBProxy.sol\":{\"keccak256\":\"0xa74afc2a946c6be63c04bae739950d71ee456b2b9bc2b374943f1cd0647ba3b3\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8403eced7bf444051753b9465bc347bff4e6f143f98636a59263034285331c95\",\"dweb:/ipfs/QmbC6BcnukqLtz66UGxZWs3tSLLwh85Btzwikc8pQCTQzE\"]}},\"version\":1}"
        }
      },
      "contracts/IPRBProxyFactory.sol": {
        "IPRBProxyFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "origin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "name": "DeployProxy",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "deploy",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "deployFor",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "eoa",
                  "type": "address"
                }
              ],
              "name": "getNextSeed",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "result",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "name": "isProxy",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "result",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deploy()": "775c300c",
              "deployFor(address)": "74912cd2",
              "getNextSeed(address)": "37a6be16",
              "isProxy(address)": "29710388",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"DeployProxy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deployFor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eoa\",\"type\":\"address\"}],\"name\":\"getNextSeed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"isProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{\"deploy()\":{\"details\":\"Sets \\\"msg.sender\\\" as the owner of the proxy.\",\"returns\":{\"proxy\":\"The address of the newly deployed proxy contract.\"}},\"deployFor(address)\":{\"params\":{\"owner\":\"The owner of the proxy.\"},\"returns\":{\"proxy\":\"The address of the newly deployed proxy contract.\"}},\"getNextSeed(address)\":{\"params\":{\"eoa\":\"The externally owned account that will own the proxy.\"}},\"isProxy(address)\":{\"params\":{\"proxy\":\"The address of the proxy to make the check for.\"}},\"version()\":{\"details\":\"This is stored in the factory rather than the proxy to save gas for end users.\"}},\"title\":\"IPRBProxyFactory\",\"version\":1},\"userdoc\":{\"events\":{\"DeployProxy(address,address,address,bytes32,bytes32,address)\":{\"notice\":\"EVENTS ///\"}},\"kind\":\"user\",\"methods\":{\"deploy()\":{\"notice\":\"Deploys a new proxy via CREATE2.\"},\"deployFor(address)\":{\"notice\":\"Deploys a new proxy via CREATE2, for the given owner.\"},\"getNextSeed(address)\":{\"notice\":\"Gets the next seed that will be used to deploy the proxy.\"},\"isProxy(address)\":{\"notice\":\"Mapping to track all deployed proxies.\"},\"version()\":{\"notice\":\"The release version of PRBProxy.\"}},\"notice\":\"Deploys new proxies with CREATE2.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPRBProxyFactory.sol\":\"IPRBProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/IPRBProxyFactory.sol\":{\"keccak256\":\"0xbfc0fd448f80f8b981ceba381692da17fd6086a7219d5e4423e34ea9e0184c27\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://f0f9fcb91a97fe39c13340ea19cffc3a6de468c5e2e6d6264dd9b4a721e51a52\",\"dweb:/ipfs/QmW4cpEpwXp1SJ7tbzcyyG5yDYpkydPBXCpuPPmt3AMagv\"]}},\"version\":1}"
        }
      },
      "contracts/IPRBProxyRegistry.sol": {
        "IPRBProxyRegistry": {
          "abi": [
            {
              "inputs": [],
              "name": "deploy",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "deployFor",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "contract IPRBProxyFactory",
                  "name": "proxyFactory",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "getCurrentProxy",
              "outputs": [
                {
                  "internalType": "contract IPRBProxy",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deploy()": "775c300c",
              "deployFor(address)": "74912cd2",
              "factory()": "c45a0155",
              "getCurrentProxy(address)": "99563174"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deployFor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IPRBProxyFactory\",\"name\":\"proxyFactory\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getCurrentProxy\",\"outputs\":[{\"internalType\":\"contract IPRBProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{\"deploy()\":{\"details\":\"Sets \\\"msg.sender\\\" as the owner of the proxy. Requirements: - All from \\\"deployFor\\\".\",\"returns\":{\"proxy\":\"The address of the newly deployed proxy contract.\"}},\"deployFor(address)\":{\"details\":\"Requirements: - The proxy must either not exist or its ownership must have been transferred by the owner.\",\"params\":{\"owner\":\"The owner of the proxy.\"},\"returns\":{\"proxy\":\"The address of the newly deployed proxy contract.\"}},\"getCurrentProxy(address)\":{\"params\":{\"owner\":\"The address of the owner of the current proxy.\"}}},\"title\":\"IPRBProxyRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy()\":{\"notice\":\"Deploys a new proxy instance via the proxy factory.\"},\"deployFor(address)\":{\"notice\":\"Deploys a new proxy instance via the proxy factory, for the given owner.\"},\"factory()\":{\"notice\":\"Address of the proxy factory contract.\"},\"getCurrentProxy(address)\":{\"notice\":\"Gets the current proxy of the given owner.\"}},\"notice\":\"Deploys new proxies via the factory and keeps a registry of owners to proxies. Owners can only have one proxy at a time.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IPRBProxyRegistry.sol\":\"IPRBProxyRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/IPRBProxy.sol\":{\"keccak256\":\"0xa74afc2a946c6be63c04bae739950d71ee456b2b9bc2b374943f1cd0647ba3b3\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8403eced7bf444051753b9465bc347bff4e6f143f98636a59263034285331c95\",\"dweb:/ipfs/QmbC6BcnukqLtz66UGxZWs3tSLLwh85Btzwikc8pQCTQzE\"]},\"contracts/IPRBProxyFactory.sol\":{\"keccak256\":\"0xbfc0fd448f80f8b981ceba381692da17fd6086a7219d5e4423e34ea9e0184c27\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://f0f9fcb91a97fe39c13340ea19cffc3a6de468c5e2e6d6264dd9b4a721e51a52\",\"dweb:/ipfs/QmW4cpEpwXp1SJ7tbzcyyG5yDYpkydPBXCpuPPmt3AMagv\"]},\"contracts/IPRBProxyRegistry.sol\":{\"keccak256\":\"0xef289accfd3cc0ed4a2d074a334c869f10d901d4524cf523e17fcfc1da7e5f68\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://f8af14509ab689380d1e911aec84462db404e42cf363bc713d7470012193285c\",\"dweb:/ipfs/QmekcFdw8ovdmzLsUvtDAt4bwLFHtDGbb9dEp7NHedqoby\"]}},\"version\":1}"
        }
      },
      "contracts/PRBProxy.sol": {
        "PRBProxy": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "PRBProxy__ExecutionNotAuthorized",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "PRBProxy__ExecutionReverted",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "PRBProxy__NotOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "originalOwner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "PRBProxy__OwnerChanged",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "PRBProxy__TargetInvalid",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "name": "Execute",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "TransferOwnership",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "response",
                  "type": "bytes"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "envoy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                }
              ],
              "name": "getPermission",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minGasReserve",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "envoy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "selector",
                  "type": "bytes4"
                },
                {
                  "internalType": "bool",
                  "name": "permission",
                  "type": "bool"
                }
              ],
              "name": "setPermission",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_240": {
                  "entryPoint": null,
                  "id": 240,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50611388600155600080546001600160a01b0319163390811782556040519091907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c908290a36107d6806100656000396000f3fe6080604052600436106100695760003560e01c8063da8d882c11610043578063da8d882c146100fa578063e64624fa14610166578063f2fde38b1461018857600080fd5b80631cff79cd146100755780638da5cb5b1461009e5780639d159568146100d657600080fd5b3661007057005b600080fd5b610088610083366004610578565b6101a8565b6040516100959190610648565b60405180910390f35b3480156100aa57600080fd5b506000546100be906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b3480156100e257600080fd5b506100ec60015481565b604051908152602001610095565b34801561010657600080fd5b5061015661011536600461067a565b6001600160a01b0392831660009081526002602090815260408083209490951682529283528381206001600160e01b03199290921681529152205460ff1690565b6040519015158152602001610095565b34801561017257600080fd5b506101866101813660046106bd565b610428565b005b34801561019457600080fd5b506101866101a3366004610718565b6104b8565b6000546060906001600160a01b03163314610262573360009081526002602090815260408083206001600160a01b0388168452825280832086356001600160e01b03198116855292529091205460ff16610260576000546040517fa2ee03b80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015233602482015290861660448201526001600160e01b0319821660648201526084015b60405180910390fd5b505b6001600160a01b0384163b6102ae576040517f29ba3bdf0000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610257565b600080546001546001600160a01b0390911691905a6102cd9190610733565b90506000866001600160a01b03168287876040516102ec929190610771565b6000604051808303818686f4925050503d8060008114610328576040519150601f19603f3d011682016040523d82523d6000602084013e61032d565b606091505b506000549095509091506001600160a01b03848116911614610392576000546040517fbcac60ce0000000000000000000000000000000000000000000000000000000081526001600160a01b0380861660048301529091166024820152604401610257565b866001600160a01b03167fb24ebe141c5f2a744b103bea65fce6c40e0dc65d7341d092c09b160f404479908787876040516103cf93929190610781565b60405180910390a28061041e578351156103ec5783518085602001fd5b6040517fe336368800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050509392505050565b6000546001600160a01b031633146104685760005460405163ac976e3960e01b81526001600160a01b039091166004820152336024820152604401610257565b6001600160a01b0393841660009081526002602090815260408083209590961682529384528481206001600160e01b03199390931681529190925291909120805460ff1916911515919091179055565b6000546001600160a01b03163381146104f55760405163ac976e3960e01b81526001600160a01b0382166004820152336024820152604401610257565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384811691821783556040519192908416917f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c9190a35050565b80356001600160a01b038116811461057357600080fd5b919050565b60008060006040848603121561058d57600080fd5b6105968461055c565b9250602084013567ffffffffffffffff808211156105b357600080fd5b818601915086601f8301126105c757600080fd5b8135818111156105d657600080fd5b8760208285010111156105e857600080fd5b6020830194508093505050509250925092565b6000815180845260005b8181101561062157602081850181015186830182015201610605565b81811115610633576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061065b60208301846105fb565b9392505050565b80356001600160e01b03198116811461057357600080fd5b60008060006060848603121561068f57600080fd5b6106988461055c565b92506106a66020850161055c565b91506106b460408501610662565b90509250925092565b600080600080608085870312156106d357600080fd5b6106dc8561055c565b93506106ea6020860161055c565b92506106f860408601610662565b91506060850135801515811461070d57600080fd5b939692955090935050565b60006020828403121561072a57600080fd5b61065b8261055c565b60008282101561076c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b8183823760009101908152919050565b60408152826040820152828460608301376000606084830101526000601f19601f850116820160608382030160208401526107bf60608201856105fb565b969550505050505056fea164736f6c634300080c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1388 PUSH1 0x1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x7D6 DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA8D882C GT PUSH2 0x43 JUMPI DUP1 PUSH4 0xDA8D882C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xE64624FA EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CFF79CD EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x9D159568 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x70 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH2 0x83 CALLDATASIZE PUSH1 0x4 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xBE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND DUP2 MSTORE SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x262 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x260 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA2EE03B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x29BA3BDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 GAS PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP3 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 DELEGATECALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SLOAD SWAP1 SWAP6 POP SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x392 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xBCAC60CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB24EBE141C5F2A744B103BEA65FCE6C40E0DC65D7341D092C09B160F40447990 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0x41E JUMPI DUP4 MLOAD ISZERO PUSH2 0x3EC JUMPI DUP4 MLOAD DUP1 DUP6 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE336368800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xAC976E39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP7 AND DUP3 MSTORE SWAP4 DUP5 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP4 SWAP1 SWAP4 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC976E39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 SWAP1 DUP5 AND SWAP2 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x596 DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x621 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x605 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x65B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH2 0x6A6 PUSH1 0x20 DUP6 ADD PUSH2 0x55C JUMP JUMPDEST SWAP2 POP PUSH2 0x6B4 PUSH1 0x40 DUP6 ADD PUSH2 0x662 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DC DUP6 PUSH2 0x55C JUMP JUMPDEST SWAP4 POP PUSH2 0x6EA PUSH1 0x20 DUP7 ADD PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH2 0x6F8 PUSH1 0x40 DUP7 ADD PUSH2 0x662 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65B DUP3 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x76C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 DUP5 DUP4 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP3 ADD PUSH1 0x60 DUP4 DUP3 SUB ADD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7BF PUSH1 0x60 DUP3 ADD DUP6 PUSH2 0x5FB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP EXP ",
              "sourceMap": "781:3552:3:-:0;;;1220:136;;;;;;;;;-1:-1:-1;1260:5:3;1244:13;:21;1275:5;:18;;-1:-1:-1;;;;;;1275:18:3;1283:10;1275:18;;;;;1308:41;;1283:10;;1275:5;1308:41;;1275:5;;1308:41;781:3552;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_245": {
                  "entryPoint": null,
                  "id": 245,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@execute_375": {
                  "entryPoint": 424,
                  "id": 375,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@getPermission_267": {
                  "entryPoint": null,
                  "id": 267,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@minGasReserve_208": {
                  "entryPoint": null,
                  "id": 208,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@owner_204": {
                  "entryPoint": null,
                  "id": 204,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setPermission_411": {
                  "entryPoint": 1064,
                  "id": 411,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@transferOwnership_444": {
                  "entryPoint": 1208,
                  "id": 444,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 1372,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_bytes4": {
                  "entryPoint": 1634,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 1816,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_bytes4": {
                  "entryPoint": 1658,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_addresst_bytes4t_bool": {
                  "entryPoint": 1725,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
                  "entryPoint": 1400,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_bytes": {
                  "entryPoint": 1531,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 1905,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_address_t_bytes4__to_t_address_t_address_t_address_t_bytes4__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1921,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1608,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 1843,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:5435:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:147:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "188:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "197:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "200:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "190:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "190:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "190:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "142:42:6",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:54:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:65:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:73:6"
                              },
                              "nodeType": "YulIf",
                              "src": "111:93:6"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:6",
                            "type": ""
                          }
                        ],
                        "src": "14:196:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "321:559:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "367:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "376:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "379:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "369:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "369:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "369:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "342:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "351:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "338:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "338:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "363:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "334:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "334:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "331:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "392:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "421:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "402:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "402:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "392:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "440:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "471:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "482:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "467:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "467:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "454:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "454:32:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "444:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "495:28:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "505:18:6",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "499:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "550:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "559:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "562:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "552:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "552:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "552:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "538:6:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "546:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "535:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "535:14:6"
                              },
                              "nodeType": "YulIf",
                              "src": "532:34:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "575:32:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "589:9:6"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "600:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "585:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "585:22:6"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "579:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "655:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "664:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "667:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "657:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "657:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "657:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "634:2:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "638:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "630:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "630:13:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "645:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "626:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "626:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "619:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "619:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "616:55:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "680:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "707:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "694:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "694:16:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "684:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "737:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "746:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "749:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "739:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "739:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "739:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "725:6:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "733:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "722:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "722:14:6"
                              },
                              "nodeType": "YulIf",
                              "src": "719:34:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "803:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "812:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "815:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "805:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "805:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "805:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "776:2:6"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "780:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "772:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "772:15:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "789:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "768:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "768:24:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "794:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "765:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "765:37:6"
                              },
                              "nodeType": "YulIf",
                              "src": "762:57:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "828:21:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "842:2:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "846:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "838:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "838:11:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "828:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "858:16:6",
                              "value": {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "868:6:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "858:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "271:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "282:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "294:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "302:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "310:6:6",
                            "type": ""
                          }
                        ],
                        "src": "215:665:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "934:422:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "944:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "964:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "958:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "958:12:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "948:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "986:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "991:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "979:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "979:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "979:19:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1007:10:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1016:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1011:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1078:110:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1092:14:6",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1102:4:6",
                                      "type": "",
                                      "value": "0x20"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "1096:2:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1134:3:6"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1139:1:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1130:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1130:11:6"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "1143:2:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1126:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1126:20:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1162:5:6"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1169:1:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1158:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "1158:13:6"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1173:2:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1154:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1154:22:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1148:5:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1148:29:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1119:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1119:59:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1119:59:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1037:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1040:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1034:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1034:13:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1048:21:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1050:17:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1059:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1062:4:6",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1055:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1055:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1050:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1030:3:6",
                                "statements": []
                              },
                              "src": "1026:162:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1222:62:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1251:3:6"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1256:6:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1247:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1247:16:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1265:4:6",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1243:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1243:27:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1272:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1236:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1236:38:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1236:38:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1203:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1206:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1200:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1200:13:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1197:87:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1293:57:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "1308:3:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "1321:6:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1329:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1317:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1317:15:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1338:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "1334:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1334:7:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1313:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1313:29:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1304:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1304:39:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1345:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1300:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1300:50:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1293:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "911:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "918:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "926:3:6",
                            "type": ""
                          }
                        ],
                        "src": "885:471:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1480:98:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1497:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1508:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1490:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1490:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1490:21:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1520:52:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1545:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1557:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1568:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1553:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1553:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "1528:16:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1528:44:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1520:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1449:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1460:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1471:4:6",
                            "type": ""
                          }
                        ],
                        "src": "1361:217:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1684:125:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1694:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1706:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1717:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1702:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1702:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1694:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1736:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1751:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1759:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1747:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1747:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1729:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1729:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1729:74:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1653:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1664:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1675:4:6",
                            "type": ""
                          }
                        ],
                        "src": "1583:226:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1915:76:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1925:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1937:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1948:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1933:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1933:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1925:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1967:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1978:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1960:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1960:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1960:25:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1884:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1895:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1906:4:6",
                            "type": ""
                          }
                        ],
                        "src": "1814:177:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2044:171:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2054:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2076:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2063:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2063:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2054:5:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2193:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2202:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2205:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2195:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2195:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2195:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2105:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2116:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2123:66:6",
                                            "type": "",
                                            "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2112:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2112:78:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2102:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2102:89:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2095:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2095:97:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2092:117:6"
                            }
                          ]
                        },
                        "name": "abi_decode_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2023:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2034:5:6",
                            "type": ""
                          }
                        ],
                        "src": "1996:219:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2323:229:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2369:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2378:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2381:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2371:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2371:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2371:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2344:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2353:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2340:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2340:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2365:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2336:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2336:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2333:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2394:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2423:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2404:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2404:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2394:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2442:48:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2475:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2486:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2471:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2471:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2452:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2452:38:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2442:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2499:47:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2531:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2542:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2527:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2527:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2509:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2509:37:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2499:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2273:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2284:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2296:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2304:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2312:6:6",
                            "type": ""
                          }
                        ],
                        "src": "2220:332:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2652:92:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2662:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2674:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2685:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2670:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2670:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2662:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2704:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2729:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2722:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2722:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2715:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2715:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2697:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2697:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2697:41:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2621:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2632:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2643:4:6",
                            "type": ""
                          }
                        ],
                        "src": "2557:187:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2866:377:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2913:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2922:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2925:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2915:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2915:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2915:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2887:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2896:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2883:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2883:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2908:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2879:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2879:33:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2876:53:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2938:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2967:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2948:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2948:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2938:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2986:48:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3019:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3030:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3015:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3015:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2996:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2996:38:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2986:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3043:47:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3075:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3086:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3071:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3071:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3053:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3053:37:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3043:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3099:45:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3129:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3140:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3125:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3125:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3112:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3112:32:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3103:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3197:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3206:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3209:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3199:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3199:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3199:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3166:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "3187:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "3180:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3180:13:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3173:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3173:21:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3163:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3163:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3156:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3156:40:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3153:60:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3222:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3232:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3222:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_bytes4t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2808:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2819:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2831:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2839:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2847:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2855:6:6",
                            "type": ""
                          }
                        ],
                        "src": "2749:494:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3318:116:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3364:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3373:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3376:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3366:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3366:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3366:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3339:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3348:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3335:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3335:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3360:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3331:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3331:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3328:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3389:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3418:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3399:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3399:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3389:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3284:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3295:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3307:6:6",
                            "type": ""
                          }
                        ],
                        "src": "3248:186:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3622:367:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3632:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3644:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3655:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3640:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3640:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3632:4:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3668:52:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3678:42:6",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3672:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3736:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3751:6:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3759:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3747:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3747:15:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3729:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3729:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3729:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3783:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3794:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3779:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3779:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3803:6:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3811:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3799:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3799:15:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3772:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3772:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3772:43:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3835:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3846:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3831:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3831:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "3855:6:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3863:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3851:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3851:15:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3824:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3824:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3824:43:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3887:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3898:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3883:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3883:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value3",
                                        "nodeType": "YulIdentifier",
                                        "src": "3907:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3915:66:6",
                                        "type": "",
                                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3903:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3903:79:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3876:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3876:107:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3876:107:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_address_t_bytes4__to_t_address_t_address_t_address_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3567:9:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3578:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3586:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3594:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3602:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3613:4:6",
                            "type": ""
                          }
                        ],
                        "src": "3439:550:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4043:230:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4073:168:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4094:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4097:77:6",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4087:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4087:88:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4087:88:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4195:1:6",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4198:4:6",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4188:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4188:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4188:15:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4223:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4226:4:6",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4216:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4216:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4216:15:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4059:1:6"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4062:1:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4056:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4056:8:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4053:188:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4250:17:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4262:1:6"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4265:1:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4258:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4258:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "4250:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4025:1:6",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4028:1:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "4034:4:6",
                            "type": ""
                          }
                        ],
                        "src": "3994:279:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4425:124:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4448:3:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4453:6:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4461:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "4435:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4435:33:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4435:33:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4477:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4491:3:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4496:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4487:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4487:16:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4481:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4519:2:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4523:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4512:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4512:13:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4512:13:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4534:9:6",
                              "value": {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4541:2:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4534:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4393:3:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4398:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4406:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4417:3:6",
                            "type": ""
                          }
                        ],
                        "src": "4278:271:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4683:198:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4693:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4705:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4716:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4701:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4701:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4693:4:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4728:52:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4738:42:6",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4732:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4796:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4811:6:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4819:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4807:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4807:15:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4789:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4789:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4789:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4843:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4854:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4839:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4839:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4863:6:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4871:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4859:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4859:15:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4832:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4832:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4832:43:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4644:9:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4655:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4663:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4674:4:6",
                            "type": ""
                          }
                        ],
                        "src": "4554:327:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5061:372:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5078:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5089:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5071:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5071:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5071:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5112:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5123:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5108:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5108:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5128:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5101:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5101:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5101:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5161:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5172:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5157:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5157:18:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5177:6:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5185:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "5144:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5144:48:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5144:48:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5216:9:6"
                                          },
                                          {
                                            "name": "value1",
                                            "nodeType": "YulIdentifier",
                                            "src": "5227:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5212:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5212:22:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5236:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5208:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5208:31:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5241:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5201:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5201:42:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5201:42:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5252:55:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5266:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value1",
                                            "nodeType": "YulIdentifier",
                                            "src": "5285:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5293:2:6",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5281:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5281:15:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5302:2:6",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "5298:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5298:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5277:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5277:29:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5262:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5262:45:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5256:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5327:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5338:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5323:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5323:20:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "5353:2:6"
                                          },
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5357:9:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "5349:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5349:18:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5369:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5345:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5345:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5316:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5316:57:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5316:57:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5382:45:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5407:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5419:2:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5423:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5415:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5415:11:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "5390:16:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5390:37:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5382:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5014:9:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5025:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5033:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5041:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5052:4:6",
                            "type": ""
                          }
                        ],
                        "src": "4886:547:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes4(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_bytes4(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes4t_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_bytes4(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value3 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_bytes4__to_t_address_t_address_t_address_t_bytes4__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), value1)\n        calldatacopy(add(headStart, 96), value0, value1)\n        mstore(add(add(headStart, value1), 96), 0)\n        let _1 := add(headStart, and(add(value1, 31), not(31)))\n        mstore(add(headStart, 0x20), add(sub(_1, headStart), 96))\n        tail := abi_encode_bytes(value2, add(_1, 96))\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106100695760003560e01c8063da8d882c11610043578063da8d882c146100fa578063e64624fa14610166578063f2fde38b1461018857600080fd5b80631cff79cd146100755780638da5cb5b1461009e5780639d159568146100d657600080fd5b3661007057005b600080fd5b610088610083366004610578565b6101a8565b6040516100959190610648565b60405180910390f35b3480156100aa57600080fd5b506000546100be906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b3480156100e257600080fd5b506100ec60015481565b604051908152602001610095565b34801561010657600080fd5b5061015661011536600461067a565b6001600160a01b0392831660009081526002602090815260408083209490951682529283528381206001600160e01b03199290921681529152205460ff1690565b6040519015158152602001610095565b34801561017257600080fd5b506101866101813660046106bd565b610428565b005b34801561019457600080fd5b506101866101a3366004610718565b6104b8565b6000546060906001600160a01b03163314610262573360009081526002602090815260408083206001600160a01b0388168452825280832086356001600160e01b03198116855292529091205460ff16610260576000546040517fa2ee03b80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015233602482015290861660448201526001600160e01b0319821660648201526084015b60405180910390fd5b505b6001600160a01b0384163b6102ae576040517f29ba3bdf0000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610257565b600080546001546001600160a01b0390911691905a6102cd9190610733565b90506000866001600160a01b03168287876040516102ec929190610771565b6000604051808303818686f4925050503d8060008114610328576040519150601f19603f3d011682016040523d82523d6000602084013e61032d565b606091505b506000549095509091506001600160a01b03848116911614610392576000546040517fbcac60ce0000000000000000000000000000000000000000000000000000000081526001600160a01b0380861660048301529091166024820152604401610257565b866001600160a01b03167fb24ebe141c5f2a744b103bea65fce6c40e0dc65d7341d092c09b160f404479908787876040516103cf93929190610781565b60405180910390a28061041e578351156103ec5783518085602001fd5b6040517fe336368800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050509392505050565b6000546001600160a01b031633146104685760005460405163ac976e3960e01b81526001600160a01b039091166004820152336024820152604401610257565b6001600160a01b0393841660009081526002602090815260408083209590961682529384528481206001600160e01b03199390931681529190925291909120805460ff1916911515919091179055565b6000546001600160a01b03163381146104f55760405163ac976e3960e01b81526001600160a01b0382166004820152336024820152604401610257565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384811691821783556040519192908416917f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c9190a35050565b80356001600160a01b038116811461057357600080fd5b919050565b60008060006040848603121561058d57600080fd5b6105968461055c565b9250602084013567ffffffffffffffff808211156105b357600080fd5b818601915086601f8301126105c757600080fd5b8135818111156105d657600080fd5b8760208285010111156105e857600080fd5b6020830194508093505050509250925092565b6000815180845260005b8181101561062157602081850181015186830182015201610605565b81811115610633576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061065b60208301846105fb565b9392505050565b80356001600160e01b03198116811461057357600080fd5b60008060006060848603121561068f57600080fd5b6106988461055c565b92506106a66020850161055c565b91506106b460408501610662565b90509250925092565b600080600080608085870312156106d357600080fd5b6106dc8561055c565b93506106ea6020860161055c565b92506106f860408601610662565b91506060850135801515811461070d57600080fd5b939692955090935050565b60006020828403121561072a57600080fd5b61065b8261055c565b60008282101561076c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b8183823760009101908152919050565b60408152826040820152828460608301376000606084830101526000601f19601f850116820160608382030160208401526107bf60608201856105fb565b969550505050505056fea164736f6c634300080c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA8D882C GT PUSH2 0x43 JUMPI DUP1 PUSH4 0xDA8D882C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xE64624FA EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CFF79CD EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x9D159568 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x70 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH2 0x83 CALLDATASIZE PUSH1 0x4 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xBE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND DUP2 MSTORE SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x262 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x260 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA2EE03B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x29BA3BDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 GAS PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP3 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 DELEGATECALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SLOAD SWAP1 SWAP6 POP SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x392 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xBCAC60CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB24EBE141C5F2A744B103BEA65FCE6C40E0DC65D7341D092C09B160F40447990 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0x41E JUMPI DUP4 MLOAD ISZERO PUSH2 0x3EC JUMPI DUP4 MLOAD DUP1 DUP6 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE336368800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xAC976E39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP7 AND DUP3 MSTORE SWAP4 DUP5 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP4 SWAP1 SWAP4 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC976E39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 SWAP1 DUP5 AND SWAP2 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x596 DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x621 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x605 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x65B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH2 0x6A6 PUSH1 0x20 DUP6 ADD PUSH2 0x55C JUMP JUMPDEST SWAP2 POP PUSH2 0x6B4 PUSH1 0x40 DUP6 ADD PUSH2 0x662 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DC DUP6 PUSH2 0x55C JUMP JUMPDEST SWAP4 POP PUSH2 0x6EA PUSH1 0x20 DUP7 ADD PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH2 0x6F8 PUSH1 0x40 DUP7 ADD PUSH2 0x662 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65B DUP3 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x76C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 DUP5 DUP4 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP3 ADD PUSH1 0x60 DUP4 DUP3 SUB ADD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7BF PUSH1 0x60 DUP3 ADD DUP6 PUSH2 0x5FB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP EXP ",
              "sourceMap": "781:3552:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:1813;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;876:29;;;;;;;;;;-1:-1:-1;876:29:3;;;;-1:-1:-1;;;;;876:29:3;;;;;;-1:-1:-1;;;;;1747:55:6;;;1729:74;;1717:2;1702:18;876:29:3;1583:226:6;942:37:3;;;;;;;;;;;;;;;;;;;1960:25:6;;;1948:2;1933:18;942:37:3;1814:177:6;1564:199:3;;;;;;;;;;-1:-1:-1;1564:199:3;;;;;:::i;:::-;-1:-1:-1;;;;;1720:18:3;;;1697:4;1720:18;;;:11;:18;;;;;;;;:26;;;;;;;;;;;;-1:-1:-1;;;;;;1720:36:3;;;;;;;;;;;;;1564:199;;;;2722:14:6;;2715:22;2697:41;;2685:2;2670:18;1564:199:3;2557:187:6;3691:313:3;;;;;;;;;;-1:-1:-1;3691:313:3;;;;;:::i;:::-;;:::i;:::-;;4040:291;;;;;;;;;;-1:-1:-1;4040:291:3;;;;;:::i;:::-;;:::i;1842:1813::-;2034:5;;1931:21;;-1:-1:-1;;;;;2034:5:3;2043:10;2034:19;2030:326;;2206:10;2069:15;2194:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;2194:31:3;;;;;;;;;2137:25;;-1:-1:-1;;;;;;2194:41:3;;;;;;;;;;;;2189:157;;2295:5;;2262:69;;;;;-1:-1:-1;;;;;2295:5:3;;;2262:69;;;3729:34:6;2302:10:3;3779:18:6;;;3772:43;3851:15;;;3831:18;;;3824:43;-1:-1:-1;;;;;;3903:79:6;;3883:18;;;3876:107;3640:19;;2262:69:3;;;;;;;;2189:157;2055:301;2030:326;-1:-1:-1;;;;;2424:18:3;;;2420:92;;2470:31;;;;;-1:-1:-1;;;;;1747:55:6;;2470:31:3;;;1729:74:6;1702:18;;2470:31:3;1583:226:6;2420:92:3;2631:14;2648:5;;;2786:13;-1:-1:-1;;;;;2648:5:3;;;;2631:14;2774:9;:25;;;;:::i;:::-;2756:43;;2859:12;2903:6;-1:-1:-1;;;;;2903:19:3;2929:7;2939:4;;2903:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3023:5:3;;2881:63;;-1:-1:-1;2881:63:3;;-1:-1:-1;;;;;;3013:15:3;;;3023:5;;3013:15;3009:90;;3082:5;;3051:37;;;;;-1:-1:-1;;;;;4807:15:6;;;3051:37:3;;;4789:34:6;3082:5:3;;;4839:18:6;;;4832:43;4701:18;;3051:37:3;4554:327:6;3009:90:3;3152:6;-1:-1:-1;;;;;3144:31:3;;3160:4;;3166:8;3144:31;;;;;;;;:::i;:::-;;;;;;;;3243:7;3238:411;;3361:15;;:19;3357:282;;3460:8;3454:15;3516;3505:8;3501:2;3497:17;3490:42;3357:282;3595:29;;;;;;;;;;;;;;3357:282;1954:1701;;;1842:1813;;;;;:::o;3691:313::-;3849:5;;-1:-1:-1;;;;;3849:5:3;3858:10;3849:19;3845:94;;3910:5;;3891:37;;-1:-1:-1;;;3891:37:3;;-1:-1:-1;;;;;3910:5:3;;;3891:37;;;4789:34:6;3917:10:3;4839:18:6;;;4832:43;4701:18;;3891:37:3;4554:327:6;3845:94:3;-1:-1:-1;;;;;3948:18:3;;;;;;;:11;:18;;;;;;;;:26;;;;;;;;;;;;-1:-1:-1;;;;;;3948:36:3;;;;;;;;;;;;;;:49;;-1:-1:-1;;3948:49:3;;;;;;;;;;3691:313::o;4040:291::-;4113:16;4132:5;-1:-1:-1;;;;;4132:5:3;4163:10;4151:22;;4147:100;;4196:40;;-1:-1:-1;;;4196:40:3;;-1:-1:-1;;;;;4807:15:6;;4196:40:3;;;4789:34:6;4225:10:3;4839:18:6;;;4832:43;4701:18;;4196:40:3;4554:327:6;4147:100:3;4256:5;:16;;;;-1:-1:-1;;;;;4256:16:3;;;;;;;;4287:37;;4256:16;;4287:37;;;;;;4256:5;4287:37;4103:228;4040:291;:::o;14:196:6:-;82:20;;-1:-1:-1;;;;;131:54:6;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:665::-;294:6;302;310;363:2;351:9;342:7;338:23;334:32;331:52;;;379:1;376;369:12;331:52;402:29;421:9;402:29;:::i;:::-;392:39;;482:2;471:9;467:18;454:32;505:18;546:2;538:6;535:14;532:34;;;562:1;559;552:12;532:34;600:6;589:9;585:22;575:32;;645:7;638:4;634:2;630:13;626:27;616:55;;667:1;664;657:12;616:55;707:2;694:16;733:2;725:6;722:14;719:34;;;749:1;746;739:12;719:34;794:7;789:2;780:6;776:2;772:15;768:24;765:37;762:57;;;815:1;812;805:12;762:57;846:2;842;838:11;828:21;;868:6;858:16;;;;;215:665;;;;;:::o;885:471::-;926:3;964:5;958:12;991:6;986:3;979:19;1016:1;1026:162;1040:6;1037:1;1034:13;1026:162;;;1102:4;1158:13;;;1154:22;;1148:29;1130:11;;;1126:20;;1119:59;1055:12;1026:162;;;1206:6;1203:1;1200:13;1197:87;;;1272:1;1265:4;1256:6;1251:3;1247:16;1243:27;1236:38;1197:87;-1:-1:-1;1338:2:6;1317:15;-1:-1:-1;;1313:29:6;1304:39;;;;1345:4;1300:50;;885:471;-1:-1:-1;;885:471:6:o;1361:217::-;1508:2;1497:9;1490:21;1471:4;1528:44;1568:2;1557:9;1553:18;1545:6;1528:44;:::i;:::-;1520:52;1361:217;-1:-1:-1;;;1361:217:6:o;1996:219::-;2063:20;;-1:-1:-1;;;;;;2112:78:6;;2102:89;;2092:117;;2205:1;2202;2195:12;2220:332;2296:6;2304;2312;2365:2;2353:9;2344:7;2340:23;2336:32;2333:52;;;2381:1;2378;2371:12;2333:52;2404:29;2423:9;2404:29;:::i;:::-;2394:39;;2452:38;2486:2;2475:9;2471:18;2452:38;:::i;:::-;2442:48;;2509:37;2542:2;2531:9;2527:18;2509:37;:::i;:::-;2499:47;;2220:332;;;;;:::o;2749:494::-;2831:6;2839;2847;2855;2908:3;2896:9;2887:7;2883:23;2879:33;2876:53;;;2925:1;2922;2915:12;2876:53;2948:29;2967:9;2948:29;:::i;:::-;2938:39;;2996:38;3030:2;3019:9;3015:18;2996:38;:::i;:::-;2986:48;;3053:37;3086:2;3075:9;3071:18;3053:37;:::i;:::-;3043:47;;3140:2;3129:9;3125:18;3112:32;3187:5;3180:13;3173:21;3166:5;3163:32;3153:60;;3209:1;3206;3199:12;3153:60;2749:494;;;;-1:-1:-1;2749:494:6;;-1:-1:-1;;2749:494:6:o;3248:186::-;3307:6;3360:2;3348:9;3339:7;3335:23;3331:32;3328:52;;;3376:1;3373;3366:12;3328:52;3399:29;3418:9;3399:29;:::i;3994:279::-;4034:4;4062:1;4059;4056:8;4053:188;;;4097:77;4094:1;4087:88;4198:4;4195:1;4188:15;4226:4;4223:1;4216:15;4053:188;-1:-1:-1;4258:9:6;;3994:279::o;4278:271::-;4461:6;4453;4448:3;4435:33;4417:3;4487:16;;4512:13;;;4487:16;4278:271;-1:-1:-1;4278:271:6:o;4886:547::-;5089:2;5078:9;5071:21;5128:6;5123:2;5112:9;5108:18;5101:34;5185:6;5177;5172:2;5161:9;5157:18;5144:48;5241:1;5236:2;5227:6;5216:9;5212:22;5208:31;5201:42;5052:4;5302:2;5298:7;5293:2;5285:6;5281:15;5277:29;5266:9;5262:45;5369:2;5357:9;5353:2;5349:18;5345:27;5338:4;5327:9;5323:20;5316:57;5390:37;5423:2;5419;5415:11;5407:6;5390:37;:::i;:::-;5382:45;4886:547;-1:-1:-1;;;;;;4886:547:6:o"
            },
            "methodIdentifiers": {
              "execute(address,bytes)": "1cff79cd",
              "getPermission(address,address,bytes4)": "da8d882c",
              "minGasReserve()": "9d159568",
              "owner()": "8da5cb5b",
              "setPermission(address,address,bytes4,bool)": "e64624fa",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"PRBProxy__ExecutionNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PRBProxy__ExecutionReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"PRBProxy__NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originalOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"PRBProxy__OwnerChanged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PRBProxy__TargetInvalid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"name\":\"Execute\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"envoy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minGasReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"envoy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"permission\",\"type\":\"bool\"}],\"name\":\"setPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{\"execute(address,bytes)\":{\"details\":\"Requirements: - The caller must be either an owner or an envoy. - `target` must be a deployed contract. - The owner cannot be changed during the DELEGATECALL.\",\"params\":{\"data\":\"Function selector plus ABI encoded data.\",\"target\":\"The address of the target contract.\"},\"returns\":{\"response\":\"The response received from the target contract.\"}},\"setPermission(address,address,bytes4,bool)\":{\"details\":\"It is not an error to reset a permission on the same (envoy,target,selector) tuple multiple types. Requirements: - The caller must be the owner.\",\"params\":{\"envoy\":\"The address of the envoy account.\",\"permission\":\"The boolean permission to set.\",\"selector\":\"The 4 byte function selector on the target contract.\",\"target\":\"The address of the target contract.\"}},\"transferOwnership(address)\":{\"details\":\"Requirements: - The caller must be the owner.\",\"params\":{\"newOwner\":\"The address of the new owner account.\"}}},\"stateVariables\":{\"minGasReserve\":{\"details\":\"This prevents the proxy from becoming unusable if EVM opcode gas costs change in the future.\"}},\"title\":\"PRBProxy\",\"version\":1},\"userdoc\":{\"errors\":{\"PRBProxy__ExecutionNotAuthorized(address,address,address,bytes4)\":[{\"notice\":\"Emitted when the caller is not the owner.\"}],\"PRBProxy__ExecutionReverted()\":[{\"notice\":\"Emitted when execution reverted with no reason.\"}],\"PRBProxy__NotOwner(address,address)\":[{\"notice\":\"Emitted when the caller is not the owner.\"}],\"PRBProxy__OwnerChanged(address,address)\":[{\"notice\":\"Emitted when the owner is changed during the DELEGATECALL.\"}],\"PRBProxy__TargetInvalid(address)\":[{\"notice\":\"Emitted when passing an EOA or an undeployed contract as the target.\"}]},\"events\":{\"Execute(address,bytes,bytes)\":{\"notice\":\"EVENTS ///\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"CONSTRUCTOR ///\"},\"execute(address,bytes)\":{\"notice\":\"Delegate calls to the target contract by forwarding the call data. Returns the data it gets back, including when the contract call reverts with a reason or custom error.\"},\"getPermission(address,address,bytes4)\":{\"notice\":\"Returns a boolean flag that indicates whether the envoy has permission to call the given target contract and function selector.\"},\"minGasReserve()\":{\"notice\":\"How much gas to reserve for running the remainder of the \\\"execute\\\" function after the DELEGATECALL.\"},\"owner()\":{\"notice\":\"The address of the owner account or contract.\"},\"setPermission(address,address,bytes4,bool)\":{\"notice\":\"Gives or takes a permission from an envoy to call the given target contract and function selector on behalf of the owner.\"},\"transferOwnership(address)\":{\"notice\":\"Transfers the owner of the contract to a new account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PRBProxy.sol\":\"PRBProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/IPRBProxy.sol\":{\"keccak256\":\"0xa74afc2a946c6be63c04bae739950d71ee456b2b9bc2b374943f1cd0647ba3b3\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8403eced7bf444051753b9465bc347bff4e6f143f98636a59263034285331c95\",\"dweb:/ipfs/QmbC6BcnukqLtz66UGxZWs3tSLLwh85Btzwikc8pQCTQzE\"]},\"contracts/PRBProxy.sol\":{\"keccak256\":\"0xa56a77594f04d92a0703862120b624db871dc7f66fcf755794d768824e2f6a45\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://69c54ff7591832aecf32740f3b31e8017b1a5862bdefb1d0cd955beca76a112d\",\"dweb:/ipfs/QmRzLPCBjevbJZZQswZEXq1VnbgGS5pireVTT8kHJptsC8\"]}},\"version\":1}"
        }
      },
      "contracts/PRBProxyFactory.sol": {
        "PRBProxyFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "origin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "seed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "name": "DeployProxy",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "deploy",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "deployFor",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "eoa",
                  "type": "address"
                }
              ],
              "name": "getNextSeed",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "nextSeed",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "name": "isProxy",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "result",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610b1e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806354fd4d501161005057806354fd4d50146100e457806374912cd2146100ec578063775c300c1461011757600080fd5b8063297103881461006c57806337a6be16146100ad575b600080fd5b61009861007a3660046102a6565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100d66100bb3660046102a6565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100a4565b6100d6600281565b6100ff6100fa3660046102a6565b61011f565b6040516001600160a01b0390911681526020016100a4565b6100ff610289565b32600081815260016020908152604080832054815192830194909452810183905290919082906060016040516020818303038152906040528051906020012090508060405161016d90610299565b8190604051809103906000f590508015801561018d573d6000803e3d6000fd5b506040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301529194509084169063f2fde38b90602401600060405180830381600087803b1580156101ee57600080fd5b505af1158015610202573d6000803e3d6000fd5b505050506001600160a01b03838116600081815260208181526040808320805460ff191660019081179091553280855281845293829020908801905580518781529182018690528101929092529186169133917f6aafca263a35a9d2a6e4e4659a84688092f4ae153df2f95cd7659508d95c18709060600160405180910390a45050919050565b60006102943361011f565b905090565b61083b806102d783390190565b6000602082840312156102b857600080fd5b81356001600160a01b03811681146102cf57600080fd5b939250505056fe608060405234801561001057600080fd5b50611388600155600080546001600160a01b0319163390811782556040519091907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c908290a36107d6806100656000396000f3fe6080604052600436106100695760003560e01c8063da8d882c11610043578063da8d882c146100fa578063e64624fa14610166578063f2fde38b1461018857600080fd5b80631cff79cd146100755780638da5cb5b1461009e5780639d159568146100d657600080fd5b3661007057005b600080fd5b610088610083366004610578565b6101a8565b6040516100959190610648565b60405180910390f35b3480156100aa57600080fd5b506000546100be906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b3480156100e257600080fd5b506100ec60015481565b604051908152602001610095565b34801561010657600080fd5b5061015661011536600461067a565b6001600160a01b0392831660009081526002602090815260408083209490951682529283528381206001600160e01b03199290921681529152205460ff1690565b6040519015158152602001610095565b34801561017257600080fd5b506101866101813660046106bd565b610428565b005b34801561019457600080fd5b506101866101a3366004610718565b6104b8565b6000546060906001600160a01b03163314610262573360009081526002602090815260408083206001600160a01b0388168452825280832086356001600160e01b03198116855292529091205460ff16610260576000546040517fa2ee03b80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015233602482015290861660448201526001600160e01b0319821660648201526084015b60405180910390fd5b505b6001600160a01b0384163b6102ae576040517f29ba3bdf0000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610257565b600080546001546001600160a01b0390911691905a6102cd9190610733565b90506000866001600160a01b03168287876040516102ec929190610771565b6000604051808303818686f4925050503d8060008114610328576040519150601f19603f3d011682016040523d82523d6000602084013e61032d565b606091505b506000549095509091506001600160a01b03848116911614610392576000546040517fbcac60ce0000000000000000000000000000000000000000000000000000000081526001600160a01b0380861660048301529091166024820152604401610257565b866001600160a01b03167fb24ebe141c5f2a744b103bea65fce6c40e0dc65d7341d092c09b160f404479908787876040516103cf93929190610781565b60405180910390a28061041e578351156103ec5783518085602001fd5b6040517fe336368800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050509392505050565b6000546001600160a01b031633146104685760005460405163ac976e3960e01b81526001600160a01b039091166004820152336024820152604401610257565b6001600160a01b0393841660009081526002602090815260408083209590961682529384528481206001600160e01b03199390931681529190925291909120805460ff1916911515919091179055565b6000546001600160a01b03163381146104f55760405163ac976e3960e01b81526001600160a01b0382166004820152336024820152604401610257565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384811691821783556040519192908416917f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c9190a35050565b80356001600160a01b038116811461057357600080fd5b919050565b60008060006040848603121561058d57600080fd5b6105968461055c565b9250602084013567ffffffffffffffff808211156105b357600080fd5b818601915086601f8301126105c757600080fd5b8135818111156105d657600080fd5b8760208285010111156105e857600080fd5b6020830194508093505050509250925092565b6000815180845260005b8181101561062157602081850181015186830182015201610605565b81811115610633576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061065b60208301846105fb565b9392505050565b80356001600160e01b03198116811461057357600080fd5b60008060006060848603121561068f57600080fd5b6106988461055c565b92506106a66020850161055c565b91506106b460408501610662565b90509250925092565b600080600080608085870312156106d357600080fd5b6106dc8561055c565b93506106ea6020860161055c565b92506106f860408601610662565b91506060850135801515811461070d57600080fd5b939692955090935050565b60006020828403121561072a57600080fd5b61065b8261055c565b60008282101561076c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b8183823760009101908152919050565b60408152826040820152828460608301376000606084830101526000601f19601f850116820160608382030160208401526107bf60608201856105fb565b969550505050505056fea164736f6c634300080c000aa164736f6c634300080c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x74912CD2 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x775C300C EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29710388 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x37A6BE16 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98 PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xD6 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x289 JUMP JUMPDEST ORIGIN PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH2 0x16D SWAP1 PUSH2 0x299 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x18D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xF2FDE38B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP5 POP SWAP1 DUP5 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x202 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ORIGIN DUP1 DUP6 MSTORE DUP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP1 DUP9 ADD SWAP1 SSTORE DUP1 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0x6AAFCA263A35A9D2A6E4E4659A84688092F4AE153DF2F95CD7659508D95C1870 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294 CALLER PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x83B DUP1 PUSH2 0x2D7 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1388 PUSH1 0x1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x7D6 DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA8D882C GT PUSH2 0x43 JUMPI DUP1 PUSH4 0xDA8D882C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xE64624FA EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CFF79CD EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x9D159568 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x70 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH2 0x83 CALLDATASIZE PUSH1 0x4 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xBE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND DUP2 MSTORE SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x262 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x260 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA2EE03B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x29BA3BDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 GAS PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP3 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 DELEGATECALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SLOAD SWAP1 SWAP6 POP SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x392 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xBCAC60CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB24EBE141C5F2A744B103BEA65FCE6C40E0DC65D7341D092C09B160F40447990 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0x41E JUMPI DUP4 MLOAD ISZERO PUSH2 0x3EC JUMPI DUP4 MLOAD DUP1 DUP6 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE336368800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xAC976E39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP7 AND DUP3 MSTORE SWAP4 DUP5 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP4 SWAP1 SWAP4 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC976E39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 SWAP1 DUP5 AND SWAP2 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x596 DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x621 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x605 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x65B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH2 0x6A6 PUSH1 0x20 DUP6 ADD PUSH2 0x55C JUMP JUMPDEST SWAP2 POP PUSH2 0x6B4 PUSH1 0x40 DUP6 ADD PUSH2 0x662 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DC DUP6 PUSH2 0x55C JUMP JUMPDEST SWAP4 POP PUSH2 0x6EA PUSH1 0x20 DUP7 ADD PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH2 0x6F8 PUSH1 0x40 DUP7 ADD PUSH2 0x662 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65B DUP3 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x76C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 DUP5 DUP4 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP3 ADD PUSH1 0x60 DUP4 DUP3 SUB ADD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7BF PUSH1 0x60 DUP3 ADD DUP6 PUSH2 0x5FB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP EXP LOG1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP EXP ",
              "sourceMap": "205:1908:4:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@deployFor_598": {
                  "entryPoint": 287,
                  "id": 598,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@deploy_515": {
                  "entryPoint": 649,
                  "id": 515,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getNextSeed_484": {
                  "entryPoint": null,
                  "id": 484,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isProxy_500": {
                  "entryPoint": null,
                  "id": 500,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@version_458": {
                  "entryPoint": null,
                  "id": 458,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 678,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2034:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:239:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "155:36:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "181:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "168:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "168:23:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "159:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "277:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "286:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "289:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "279:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "279:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "279:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "213:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "224:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "231:42:6",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "220:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "220:54:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "210:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "210:65:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:73:6"
                              },
                              "nodeType": "YulIf",
                              "src": "200:93:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "302:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "312:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:6",
                            "type": ""
                          }
                        ],
                        "src": "14:309:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "423:92:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "433:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "445:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "456:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "441:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "441:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "433:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "475:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "500:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "493:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "493:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "486:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "486:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "468:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "468:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "468:41:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "392:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "403:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "414:4:6",
                            "type": ""
                          }
                        ],
                        "src": "328:187:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "621:76:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "631:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "643:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "654:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "639:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "639:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "631:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "673:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "684:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "666:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "666:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "666:25:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "590:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "601:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "612:4:6",
                            "type": ""
                          }
                        ],
                        "src": "520:177:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "803:76:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "813:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "825:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "836:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "821:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "821:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "813:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "855:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "866:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "848:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "848:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "848:25:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "772:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "783:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "794:4:6",
                            "type": ""
                          }
                        ],
                        "src": "702:177:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1001:125:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1011:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1023:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1034:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1019:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1019:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1011:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1053:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1068:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1076:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1064:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1064:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1046:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1046:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1046:74:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "970:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "981:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "992:4:6",
                            "type": ""
                          }
                        ],
                        "src": "884:242:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1260:168:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1270:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1282:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1293:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1278:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1278:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1270:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1312:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1327:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1335:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1323:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1323:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1305:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1305:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1305:74:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1399:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1410:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1395:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1395:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1415:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1388:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1388:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1388:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1221:9:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1232:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1240:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1251:4:6",
                            "type": ""
                          }
                        ],
                        "src": "1131:297:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1534:125:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1544:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1556:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1567:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1552:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1552:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1544:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1586:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1601:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1609:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1597:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1597:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1579:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1579:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1579:74:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1503:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1514:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1525:4:6",
                            "type": ""
                          }
                        ],
                        "src": "1433:226:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1821:211:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1831:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1843:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1854:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1839:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1839:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1831:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1873:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1884:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1866:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1866:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1866:25:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1911:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1922:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1907:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1907:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1927:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1900:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1900:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1900:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1954:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1965:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1950:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1950:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1974:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1982:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1970:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1970:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1943:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1943:83:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1943:83:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1774:9:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1785:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1793:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1801:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1812:4:6",
                            "type": ""
                          }
                        ],
                        "src": "1664:368:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_address__to_t_bytes32_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100675760003560e01c806354fd4d501161005057806354fd4d50146100e457806374912cd2146100ec578063775c300c1461011757600080fd5b8063297103881461006c57806337a6be16146100ad575b600080fd5b61009861007a3660046102a6565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100d66100bb3660046102a6565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100a4565b6100d6600281565b6100ff6100fa3660046102a6565b61011f565b6040516001600160a01b0390911681526020016100a4565b6100ff610289565b32600081815260016020908152604080832054815192830194909452810183905290919082906060016040516020818303038152906040528051906020012090508060405161016d90610299565b8190604051809103906000f590508015801561018d573d6000803e3d6000fd5b506040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301529194509084169063f2fde38b90602401600060405180830381600087803b1580156101ee57600080fd5b505af1158015610202573d6000803e3d6000fd5b505050506001600160a01b03838116600081815260208181526040808320805460ff191660019081179091553280855281845293829020908801905580518781529182018690528101929092529186169133917f6aafca263a35a9d2a6e4e4659a84688092f4ae153df2f95cd7659508d95c18709060600160405180910390a45050919050565b60006102943361011f565b905090565b61083b806102d783390190565b6000602082840312156102b857600080fd5b81356001600160a01b03811681146102cf57600080fd5b939250505056fe608060405234801561001057600080fd5b50611388600155600080546001600160a01b0319163390811782556040519091907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c908290a36107d6806100656000396000f3fe6080604052600436106100695760003560e01c8063da8d882c11610043578063da8d882c146100fa578063e64624fa14610166578063f2fde38b1461018857600080fd5b80631cff79cd146100755780638da5cb5b1461009e5780639d159568146100d657600080fd5b3661007057005b600080fd5b610088610083366004610578565b6101a8565b6040516100959190610648565b60405180910390f35b3480156100aa57600080fd5b506000546100be906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b3480156100e257600080fd5b506100ec60015481565b604051908152602001610095565b34801561010657600080fd5b5061015661011536600461067a565b6001600160a01b0392831660009081526002602090815260408083209490951682529283528381206001600160e01b03199290921681529152205460ff1690565b6040519015158152602001610095565b34801561017257600080fd5b506101866101813660046106bd565b610428565b005b34801561019457600080fd5b506101866101a3366004610718565b6104b8565b6000546060906001600160a01b03163314610262573360009081526002602090815260408083206001600160a01b0388168452825280832086356001600160e01b03198116855292529091205460ff16610260576000546040517fa2ee03b80000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015233602482015290861660448201526001600160e01b0319821660648201526084015b60405180910390fd5b505b6001600160a01b0384163b6102ae576040517f29ba3bdf0000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610257565b600080546001546001600160a01b0390911691905a6102cd9190610733565b90506000866001600160a01b03168287876040516102ec929190610771565b6000604051808303818686f4925050503d8060008114610328576040519150601f19603f3d011682016040523d82523d6000602084013e61032d565b606091505b506000549095509091506001600160a01b03848116911614610392576000546040517fbcac60ce0000000000000000000000000000000000000000000000000000000081526001600160a01b0380861660048301529091166024820152604401610257565b866001600160a01b03167fb24ebe141c5f2a744b103bea65fce6c40e0dc65d7341d092c09b160f404479908787876040516103cf93929190610781565b60405180910390a28061041e578351156103ec5783518085602001fd5b6040517fe336368800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050509392505050565b6000546001600160a01b031633146104685760005460405163ac976e3960e01b81526001600160a01b039091166004820152336024820152604401610257565b6001600160a01b0393841660009081526002602090815260408083209590961682529384528481206001600160e01b03199390931681529190925291909120805460ff1916911515919091179055565b6000546001600160a01b03163381146104f55760405163ac976e3960e01b81526001600160a01b0382166004820152336024820152604401610257565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0384811691821783556040519192908416917f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c9190a35050565b80356001600160a01b038116811461057357600080fd5b919050565b60008060006040848603121561058d57600080fd5b6105968461055c565b9250602084013567ffffffffffffffff808211156105b357600080fd5b818601915086601f8301126105c757600080fd5b8135818111156105d657600080fd5b8760208285010111156105e857600080fd5b6020830194508093505050509250925092565b6000815180845260005b8181101561062157602081850181015186830182015201610605565b81811115610633576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061065b60208301846105fb565b9392505050565b80356001600160e01b03198116811461057357600080fd5b60008060006060848603121561068f57600080fd5b6106988461055c565b92506106a66020850161055c565b91506106b460408501610662565b90509250925092565b600080600080608085870312156106d357600080fd5b6106dc8561055c565b93506106ea6020860161055c565b92506106f860408601610662565b91506060850135801515811461070d57600080fd5b939692955090935050565b60006020828403121561072a57600080fd5b61065b8261055c565b60008282101561076c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b8183823760009101908152919050565b60408152826040820152828460608301376000606084830101526000601f19601f850116820160608382030160208401526107bf60608201856105fb565b969550505050505056fea164736f6c634300080c000aa164736f6c634300080c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 GT PUSH2 0x50 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x74912CD2 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x775C300C EQ PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29710388 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x37A6BE16 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98 PUSH2 0x7A CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xD6 PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x289 JUMP JUMPDEST ORIGIN PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD SWAP3 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH2 0x16D SWAP1 PUSH2 0x299 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x18D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xF2FDE38B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP5 POP SWAP1 DUP5 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x202 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE ORIGIN DUP1 DUP6 MSTORE DUP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP1 DUP9 ADD SWAP1 SSTORE DUP1 MLOAD DUP8 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0x6AAFCA263A35A9D2A6E4E4659A84688092F4AE153DF2F95CD7659508D95C1870 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294 CALLER PUSH2 0x11F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x83B DUP1 PUSH2 0x2D7 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1388 PUSH1 0x1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP1 DUP3 SWAP1 LOG3 PUSH2 0x7D6 DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDA8D882C GT PUSH2 0x43 JUMPI DUP1 PUSH4 0xDA8D882C EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xE64624FA EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CFF79CD EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x9D159568 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x70 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH2 0x83 CALLDATASIZE PUSH1 0x4 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xBE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND DUP2 MSTORE SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x262 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x260 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA2EE03B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP7 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x29BA3BDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 GAS PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x733 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP3 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 DELEGATECALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 SLOAD SWAP1 SWAP6 POP SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x392 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xBCAC60CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB24EBE141C5F2A744B103BEA65FCE6C40E0DC65D7341D092C09B160F40447990 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0x41E JUMPI DUP4 MLOAD ISZERO PUSH2 0x3EC JUMPI DUP4 MLOAD DUP1 DUP6 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE336368800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xAC976E39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP7 AND DUP3 MSTORE SWAP4 DUP5 MSTORE DUP5 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP4 SWAP1 SWAP4 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC976E39 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x257 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 SWAP1 DUP5 AND SWAP2 PUSH32 0x5C486528EC3E3F0EA91181CFF8116F02BFA350E03B8B6F12E00765ADBB5AF85C SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x596 DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x621 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x605 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x65B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP5 PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH2 0x6A6 PUSH1 0x20 DUP6 ADD PUSH2 0x55C JUMP JUMPDEST SWAP2 POP PUSH2 0x6B4 PUSH1 0x40 DUP6 ADD PUSH2 0x662 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DC DUP6 PUSH2 0x55C JUMP JUMPDEST SWAP4 POP PUSH2 0x6EA PUSH1 0x20 DUP7 ADD PUSH2 0x55C JUMP JUMPDEST SWAP3 POP PUSH2 0x6F8 PUSH1 0x40 DUP7 ADD PUSH2 0x662 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65B DUP3 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x76C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 DUP5 DUP4 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP3 ADD PUSH1 0x60 DUP4 DUP3 SUB ADD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7BF PUSH1 0x60 DUP3 ADD DUP6 PUSH2 0x5FB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP EXP LOG1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP EXP ",
              "sourceMap": "205:1908:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:117;;;;;;:::i;:::-;-1:-1:-1;;;;;980:14:4;948:11;980:14;;;;;;;;;;;;;;884:117;;;;493:14:6;;486:22;468:41;;456:2;441:18;884:117:4;;;;;;;;715:126;;;;;;:::i;:::-;-1:-1:-1;;;;;820:14:4;781:16;820:14;;;:9;:14;;;;;;;715:126;;;;666:25:6;;;654:2;639:18;715:126:4;520:177:6;321:44:4;;364:1;321:44;;1244:867;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1064:55:6;;;1046:74;;1034:2;1019:18;1244:867:4;884:242:6;1087:114:4;;;:::i;1244:867::-;1361:9;1303:21;1351:20;;;:9;:20;;;;;;;;;1521:27;;;;;1305:74:6;;;;1395:18;;1388:34;;;1303:21:4;;1351:20;1303:21;;1278:18:6;;1521:27:4;;;;;;;;;;;;1511:38;;;;;;1496:53;;1638:4;1618:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1743:41:4;;;;;-1:-1:-1;;;;;1064:55:6;;;1743:41:4;;;1046:74:6;1602:45:4;;-1:-1:-1;1743:34:4;;;;;;1019:18:6;;1743:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1834:14:4;;;:7;:14;;;;;;;;;;;:21;;-1:-1:-1;;1834:21:4;1851:4;1834:21;;;;;;1931:9;1921:20;;;;;;;;;;1952:17;;;1921:49;;2035:69;;1866:25:6;;;1907:18;;;1900:34;;;1950:18;;1943:83;;;;2035:69:4;;;;2058:10;;2035:69;;1854:2:6;1839:18;2035:69:4;;;;;;;1326:785;;1244:867;;;:::o;1087:114::-;1132:21;1173;1183:10;1173:9;:21::i;:::-;1165:29;;1087:114;:::o;-1:-1:-1:-;;;;;;;;:::o;14:309:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:6;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:6:o"
            },
            "methodIdentifiers": {
              "deploy()": "775c300c",
              "deployFor(address)": "74912cd2",
              "getNextSeed(address)": "37a6be16",
              "isProxy(address)": "29710388",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"seed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"DeployProxy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deployFor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eoa\",\"type\":\"address\"}],\"name\":\"getNextSeed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"nextSeed\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"isProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{\"deploy()\":{\"details\":\"Sets \\\"msg.sender\\\" as the owner of the proxy.\",\"returns\":{\"proxy\":\"The address of the newly deployed proxy contract.\"}},\"deployFor(address)\":{\"params\":{\"owner\":\"The owner of the proxy.\"},\"returns\":{\"proxy\":\"The address of the newly deployed proxy contract.\"}},\"getNextSeed(address)\":{\"params\":{\"eoa\":\"The externally owned account that will own the proxy.\"}},\"isProxy(address)\":{\"params\":{\"proxy\":\"The address of the proxy to make the check for.\"}}},\"stateVariables\":{\"nextSeeds\":{\"details\":\"Internal mapping to track the next seed to be used by an EOA.\"},\"proxies\":{\"details\":\"Internal mapping to track all deployed proxies.\"},\"version\":{\"details\":\"This is stored in the factory rather than the proxy to save gas for end users.\"}},\"title\":\"PRBProxyFactory\",\"version\":1},\"userdoc\":{\"events\":{\"DeployProxy(address,address,address,bytes32,bytes32,address)\":{\"notice\":\"EVENTS ///\"}},\"kind\":\"user\",\"methods\":{\"deploy()\":{\"notice\":\"Deploys a new proxy via CREATE2.\"},\"deployFor(address)\":{\"notice\":\"Deploys a new proxy via CREATE2, for the given owner.\"},\"getNextSeed(address)\":{\"notice\":\"Gets the next seed that will be used to deploy the proxy.\"},\"isProxy(address)\":{\"notice\":\"Mapping to track all deployed proxies.\"},\"version()\":{\"notice\":\"The release version of PRBProxy.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PRBProxyFactory.sol\":\"PRBProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/IPRBProxy.sol\":{\"keccak256\":\"0xa74afc2a946c6be63c04bae739950d71ee456b2b9bc2b374943f1cd0647ba3b3\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8403eced7bf444051753b9465bc347bff4e6f143f98636a59263034285331c95\",\"dweb:/ipfs/QmbC6BcnukqLtz66UGxZWs3tSLLwh85Btzwikc8pQCTQzE\"]},\"contracts/IPRBProxyFactory.sol\":{\"keccak256\":\"0xbfc0fd448f80f8b981ceba381692da17fd6086a7219d5e4423e34ea9e0184c27\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://f0f9fcb91a97fe39c13340ea19cffc3a6de468c5e2e6d6264dd9b4a721e51a52\",\"dweb:/ipfs/QmW4cpEpwXp1SJ7tbzcyyG5yDYpkydPBXCpuPPmt3AMagv\"]},\"contracts/PRBProxy.sol\":{\"keccak256\":\"0xa56a77594f04d92a0703862120b624db871dc7f66fcf755794d768824e2f6a45\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://69c54ff7591832aecf32740f3b31e8017b1a5862bdefb1d0cd955beca76a112d\",\"dweb:/ipfs/QmRzLPCBjevbJZZQswZEXq1VnbgGS5pireVTT8kHJptsC8\"]},\"contracts/PRBProxyFactory.sol\":{\"keccak256\":\"0x45b70ffa5df3f4228a7607ee7f18eb84f657de29fa6d3162477948a6c48568b3\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ed33d56e73854d73861a7ee4465f093c512b38db2e789843d85489d6232e9bc2\",\"dweb:/ipfs/QmaWmmrNDxjs4i8Ks6a2qDmpCFLvSLNe6PhTVcvqWQNiij\"]}},\"version\":1}"
        }
      },
      "contracts/PRBProxyRegistry.sol": {
        "PRBProxyRegistry": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IPRBProxyFactory",
                  "name": "factory_",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "PRBProxyRegistry__ProxyAlreadyExists",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "deploy",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "deployFor",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "contract IPRBProxyFactory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "getCurrentProxy",
              "outputs": [
                {
                  "internalType": "contract IPRBProxy",
                  "name": "proxy",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_635": {
                  "entryPoint": null,
                  "id": 635,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_contract$_IPRBProxyFactory_$125_fromMemory": {
                  "entryPoint": 84,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:330:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "119:209:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "140:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "149:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "136:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "136:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "132:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "132:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "129:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "190:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "209:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "203:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "203:16:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "194:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "282:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "291:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "294:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "284:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "284:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "284:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "241:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "252:5:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "267:3:6",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "272:1:6",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "263:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "263:11:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "276:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "259:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "259:19:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "248:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "248:31:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "238:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "238:42:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:50:6"
                              },
                              "nodeType": "YulIf",
                              "src": "228:70:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "307:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "307:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IPRBProxyFactory_$125_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "85:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "96:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "108:6:6",
                            "type": ""
                          }
                        ],
                        "src": "14:314:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IPRBProxyFactory_$125_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060405161038b38038061038b83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6102f8806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806374912cd214610051578063775c300c146100805780639956317414610088578063c45a0155146100b4575b600080fd5b61006461005f3660046102aa565b6100c7565b6040516001600160a01b03909116815260200160405180910390f35b610064610282565b6100646100963660046102aa565b6001600160a01b039081166000908152600160205260409020541690565b600054610064906001600160a01b031681565b6001600160a01b0380821660009081526001602052604081205490911680158015906101655750826001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610136573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015a91906102ce565b6001600160a01b0316145b156101ab576040517f18b530ed0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260240160405180910390fd5b6000546040517f74912cd20000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152909116906374912cd2906024016020604051808303816000875af1158015610210573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023491906102ce565b6001600160a01b03938416600090815260016020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948216949094179093555090919050565b600061028d336100c7565b905090565b6001600160a01b03811681146102a757600080fd5b50565b6000602082840312156102bc57600080fd5b81356102c781610292565b9392505050565b6000602082840312156102e057600080fd5b81516102c78161029256fea164736f6c634300080c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x38B CODESIZE SUB DUP1 PUSH2 0x38B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2F8 DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74912CD2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x775C300C EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x99563174 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x282 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x64 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x165 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x136 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x1AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x18B530ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x74912CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x74912CD2 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D CALLER PUSH2 0xC7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C7 DUP2 PUSH2 0x292 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2C7 DUP2 PUSH2 0x292 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP EXP ",
              "sourceMap": "344:1466:5:-:0;;;688:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;737:7;:18;;-1:-1:-1;;;;;;737:18:5;-1:-1:-1;;;;;737:18:5;;;;;;;;;;344:1466;;14:314:6;108:6;161:2;149:9;140:7;136:23;132:32;129:52;;;177:1;174;167:12;129:52;203:16;;-1:-1:-1;;;;;248:31:6;;238:42;;228:70;;294:1;291;284:12;228:70;317:5;14:314;-1:-1:-1;;;14:314:6:o;:::-;344:1466:5;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@deployFor_720": {
                  "entryPoint": 199,
                  "id": 720,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@deploy_667": {
                  "entryPoint": 642,
                  "id": 667,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@factory_617": {
                  "entryPoint": null,
                  "id": 617,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getCurrentProxy_652": {
                  "entryPoint": null,
                  "id": 652,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 682,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 718,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_payable_fromMemory": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IPRBProxyFactory_$125__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IPRBProxy_$70__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 658,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1922:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:109:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "146:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "155:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "158:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "148:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "148:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "148:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "100:42:6",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:54:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:65:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "72:73:6"
                              },
                              "nodeType": "YulIf",
                              "src": "69:93:6"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "48:5:6",
                            "type": ""
                          }
                        ],
                        "src": "14:154:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "243:177:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "289:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "298:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "301:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "291:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "291:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "291:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "264:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "273:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "260:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "260:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "285:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "256:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "256:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "253:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "314:36:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "340:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "327:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "327:23:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "318:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "384:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "359:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "359:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "359:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "399:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "409:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "209:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "220:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "232:6:6",
                            "type": ""
                          }
                        ],
                        "src": "173:247:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "542:125:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "552:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "564:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "575:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "560:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "560:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "552:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "594:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "609:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "617:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "605:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "605:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "587:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "587:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "587:74:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "511:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "522:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "533:4:6",
                            "type": ""
                          }
                        ],
                        "src": "425:242:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "789:125:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "799:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "811:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "822:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "807:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "807:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "799:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "841:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "856:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "864:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "852:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "852:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "834:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "834:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "834:74:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IPRBProxy_$70__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "758:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "769:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "780:4:6",
                            "type": ""
                          }
                        ],
                        "src": "672:242:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1044:125:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1054:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1066:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1077:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1062:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1062:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1054:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1096:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1111:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1119:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1107:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1107:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1089:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1089:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1089:74:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IPRBProxyFactory_$125__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1013:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1024:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1035:4:6",
                            "type": ""
                          }
                        ],
                        "src": "919:250:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1255:170:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1301:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1310:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1313:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1303:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1303:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1303:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1276:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1285:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1272:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1272:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1297:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1268:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1268:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1265:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1326:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1345:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1339:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1339:16:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1330:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1389:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1364:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1364:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1364:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1404:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1414:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1404:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1221:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1232:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1244:6:6",
                            "type": ""
                          }
                        ],
                        "src": "1174:251:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1531:125:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1541:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1553:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1564:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1549:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1549:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1541:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1583:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1598:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1606:42:6",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1594:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1594:55:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1576:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1576:74:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1576:74:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1500:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1511:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1522:4:6",
                            "type": ""
                          }
                        ],
                        "src": "1430:226:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1750:170:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1796:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1805:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1808:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1798:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1798:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1798:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1771:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1780:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1767:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1767:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1792:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1763:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1763:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1760:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1821:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1840:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1834:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1834:16:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1825:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1884:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1859:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1859:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1859:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1899:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1909:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1899:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payable_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1716:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1727:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1739:6:6",
                            "type": ""
                          }
                        ],
                        "src": "1661:259:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IPRBProxy_$70__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IPRBProxyFactory_$125__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806374912cd214610051578063775c300c146100805780639956317414610088578063c45a0155146100b4575b600080fd5b61006461005f3660046102aa565b6100c7565b6040516001600160a01b03909116815260200160405180910390f35b610064610282565b6100646100963660046102aa565b6001600160a01b039081166000908152600160205260409020541690565b600054610064906001600160a01b031681565b6001600160a01b0380821660009081526001602052604081205490911680158015906101655750826001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610136573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015a91906102ce565b6001600160a01b0316145b156101ab576040517f18b530ed0000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260240160405180910390fd5b6000546040517f74912cd20000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152909116906374912cd2906024016020604051808303816000875af1158015610210573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023491906102ce565b6001600160a01b03938416600090815260016020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948216949094179093555090919050565b600061028d336100c7565b905090565b6001600160a01b03811681146102a757600080fd5b50565b6000602082840312156102bc57600080fd5b81356102c781610292565b9392505050565b6000602082840312156102e057600080fd5b81516102c78161029256fea164736f6c634300080c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74912CD2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x775C300C EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x99563174 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x282 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x96 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x64 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x165 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x136 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x1AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x18B530ED00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x74912CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x74912CD2 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D CALLER PUSH2 0xC7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C7 DUP2 PUSH2 0x292 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2C7 DUP2 PUSH2 0x292 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP EXP ",
              "sourceMap": "344:1466:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1225:583;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;605:55:6;;;587:74;;575:2;560:18;1225:583:5;;;;;;;1067:114;;;:::i;845:135::-;;;;;;:::i;:::-;-1:-1:-1;;;;;952:21:5;;;917:15;952:21;;;:14;:21;;;;;;;;845:135;463:40;;;;;-1:-1:-1;;;;;463:40:5;;;1225:583;-1:-1:-1;;;;;1342:21:5;;;1284;1342;;;:14;:21;;;;;;1284;;1342;1458:35;;;;;:68;;;1521:5;-1:-1:-1;;;;;1497:29:5;:12;-1:-1:-1;;;;;1497:18:5;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1497:29:5;;1458:68;1454:149;;;1549:43;;;;;-1:-1:-1;;;;;605:55:6;;1549:43:5;;;587:74:6;560:18;;1549:43:5;;;;;;;1454:149;1666:7;;:24;;;;;-1:-1:-1;;;;;605:55:6;;;1666:24:5;;;587:74:6;1666:7:5;;;;:17;;560:18:6;;1666:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1761:21:5;;;;;;;:14;:21;;;;;:40;;;;;;;;;;;;;;-1:-1:-1;1761:40:5;;1658:32;-1:-1:-1;1225:583:5:o;1067:114::-;1112:21;1153;1163:10;1153:9;:21::i;:::-;1145:29;;1067:114;:::o;14:154:6:-;-1:-1:-1;;;;;93:5:6;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:247::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;:::-;409:5;173:247;-1:-1:-1;;;173:247:6:o;1174:251::-;1244:6;1297:2;1285:9;1276:7;1272:23;1268:32;1265:52;;;1313:1;1310;1303:12;1265:52;1345:9;1339:16;1364:31;1389:5;1364:31;:::i"
            },
            "methodIdentifiers": {
              "deploy()": "775c300c",
              "deployFor(address)": "74912cd2",
              "factory()": "c45a0155",
              "getCurrentProxy(address)": "99563174"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPRBProxyFactory\",\"name\":\"factory_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PRBProxyRegistry__ProxyAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"deployFor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IPRBProxyFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getCurrentProxy\",\"outputs\":[{\"internalType\":\"contract IPRBProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{\"deploy()\":{\"details\":\"Sets \\\"msg.sender\\\" as the owner of the proxy. Requirements: - All from \\\"deployFor\\\".\",\"returns\":{\"proxy\":\"The address of the newly deployed proxy contract.\"}},\"deployFor(address)\":{\"details\":\"Requirements: - The proxy must either not exist or its ownership must have been transferred by the owner.\",\"params\":{\"owner\":\"The owner of the proxy.\"},\"returns\":{\"proxy\":\"The address of the newly deployed proxy contract.\"}},\"getCurrentProxy(address)\":{\"params\":{\"owner\":\"The address of the owner of the current proxy.\"}}},\"title\":\"PRBProxyRegistry\",\"version\":1},\"userdoc\":{\"errors\":{\"PRBProxyRegistry__ProxyAlreadyExists(address)\":[{\"notice\":\"Emitted when a proxy already exists for the given owner.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"CONSTRUCTOR ///\"},\"deploy()\":{\"notice\":\"Deploys a new proxy instance via the proxy factory.\"},\"deployFor(address)\":{\"notice\":\"Deploys a new proxy instance via the proxy factory, for the given owner.\"},\"factory()\":{\"notice\":\"Address of the proxy factory contract.\"},\"getCurrentProxy(address)\":{\"notice\":\"Gets the current proxy of the given owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PRBProxyRegistry.sol\":\"PRBProxyRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/IPRBProxy.sol\":{\"keccak256\":\"0xa74afc2a946c6be63c04bae739950d71ee456b2b9bc2b374943f1cd0647ba3b3\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8403eced7bf444051753b9465bc347bff4e6f143f98636a59263034285331c95\",\"dweb:/ipfs/QmbC6BcnukqLtz66UGxZWs3tSLLwh85Btzwikc8pQCTQzE\"]},\"contracts/IPRBProxyFactory.sol\":{\"keccak256\":\"0xbfc0fd448f80f8b981ceba381692da17fd6086a7219d5e4423e34ea9e0184c27\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://f0f9fcb91a97fe39c13340ea19cffc3a6de468c5e2e6d6264dd9b4a721e51a52\",\"dweb:/ipfs/QmW4cpEpwXp1SJ7tbzcyyG5yDYpkydPBXCpuPPmt3AMagv\"]},\"contracts/IPRBProxyRegistry.sol\":{\"keccak256\":\"0xef289accfd3cc0ed4a2d074a334c869f10d901d4524cf523e17fcfc1da7e5f68\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://f8af14509ab689380d1e911aec84462db404e42cf363bc713d7470012193285c\",\"dweb:/ipfs/QmekcFdw8ovdmzLsUvtDAt4bwLFHtDGbb9dEp7NHedqoby\"]},\"contracts/PRBProxyRegistry.sol\":{\"keccak256\":\"0x745d011362dcb3ace1feab8eb720e154e5be04447cffbecd395d2237eccad9b3\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://09efa8fb401da0f6c8129b85b0682ae2a53e5cd5312116c08a75a720e4e26411\",\"dweb:/ipfs/QmdEKi2N8FCysMK3x7Wd9WaoH4FujCiLQT9pN2B53ZdNRS\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/IPRBProxy.sol": {
        "ast": {
          "absolutePath": "contracts/IPRBProxy.sol",
          "exportedSymbols": {
            "IPRBProxy": [
              70
            ]
          },
          "id": 71,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPRBProxy",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "64:120:0",
                "text": "@title IPRBProxy\n @author Paul Razvan Berg\n @notice Proxy contract to compose transactions on owner's behalf."
              },
              "fullyImplemented": false,
              "id": 70,
              "linearizedBaseContracts": [
                70
              ],
              "name": "IPRBProxy",
              "nameLocation": "194:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "210:15:0",
                    "text": "EVENTS ///"
                  },
                  "id": 11,
                  "name": "Execute",
                  "nameLocation": "236:7:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "260:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "244:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "244:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "274:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "268:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "268:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "286:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "280:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "280:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "243:52:0"
                  },
                  "src": "230:66:0"
                },
                {
                  "anonymous": false,
                  "id": 17,
                  "name": "TransferOwnership",
                  "nameLocation": "308:17:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldOwner",
                        "nameLocation": "342:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "326:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "326:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 15,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "368:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "352:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 14,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "352:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "325:52:0"
                  },
                  "src": "302:76:0"
                },
                {
                  "documentation": {
                    "id": 18,
                    "nodeType": "StructuredDocumentation",
                    "src": "423:147:0",
                    "text": "@notice Returns a boolean flag that indicates whether the envoy has permission to call the given target\n contract and function selector."
                  },
                  "functionSelector": "da8d882c",
                  "id": 29,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPermission",
                  "nameLocation": "584:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "envoy",
                        "nameLocation": "615:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 29,
                        "src": "607:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "607:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "638:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 29,
                        "src": "630:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "630:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "661:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 29,
                        "src": "654:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "597:78:0"
                  },
                  "returnParameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 29,
                        "src": "699:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "698:6:0"
                  },
                  "scope": 70,
                  "src": "575:130:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:57:0",
                    "text": "@notice The address of the owner account or contract."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 35,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "782:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "787:2:0"
                  },
                  "returnParameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "813:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "813:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "812:9:0"
                  },
                  "scope": 70,
                  "src": "773:49:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "828:217:0",
                    "text": "@notice How much gas to reserve for running the remainder of the \"execute\" function after the DELEGATECALL.\n @dev This prevents the proxy from becoming unusable if EVM opcode gas costs change in the future."
                  },
                  "functionSelector": "9d159568",
                  "id": 41,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "minGasReserve",
                  "nameLocation": "1059:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1072:2:0"
                  },
                  "returnParameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 41,
                        "src": "1098:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1098:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1097:9:0"
                  },
                  "scope": 70,
                  "src": "1050:57:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 42,
                    "nodeType": "StructuredDocumentation",
                    "src": "1156:593:0",
                    "text": "@notice Delegate calls to the target contract by forwarding the call data. Returns the data it gets back,\n including when the contract call reverts with a reason or custom error.\n @dev Requirements:\n - The caller must be either an owner or an envoy.\n - `target` must be a deployed contract.\n - The owner cannot be changed during the DELEGATECALL.\n @param target The address of the target contract.\n @param data Function selector plus ABI encoded data.\n @return response The response received from the target contract."
                  },
                  "functionSelector": "1cff79cd",
                  "id": 51,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nameLocation": "1763:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "1779:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 51,
                        "src": "1771:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 46,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1802:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 51,
                        "src": "1787:19:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 45,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1787:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1770:37:0"
                  },
                  "returnParameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "1847:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 51,
                        "src": "1834:21:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1834:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1833:23:0"
                  },
                  "scope": 70,
                  "src": "1754:103:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 52,
                    "nodeType": "StructuredDocumentation",
                    "src": "1863:578:0",
                    "text": "@notice Gives or takes a permission from an envoy to call the given target contract and function selector\n on behalf of the owner.\n @dev It is not an error to reset a permission on the same (envoy,target,selector) tuple multiple types.\n Requirements:\n - The caller must be the owner.\n @param envoy The address of the envoy account.\n @param target The address of the target contract.\n @param selector The 4 byte function selector on the target contract.\n @param permission The boolean permission to set."
                  },
                  "functionSelector": "e64624fa",
                  "id": 63,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setPermission",
                  "nameLocation": "2455:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 61,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 54,
                        "mutability": "mutable",
                        "name": "envoy",
                        "nameLocation": "2486:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "2478:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2478:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "2509:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "2501:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2501:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "2532:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "2525:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2525:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 60,
                        "mutability": "mutable",
                        "name": "permission",
                        "nameLocation": "2555:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 63,
                        "src": "2550:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 59,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2550:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:103:0"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2580:0:0"
                  },
                  "scope": 70,
                  "src": "2446:135:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 64,
                    "nodeType": "StructuredDocumentation",
                    "src": "2587:194:0",
                    "text": "@notice Transfers the owner of the contract to a new account.\n @dev Requirements:\n - The caller must be the owner.\n @param newOwner The address of the new owner account."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 69,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "2795:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 66,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2821:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 69,
                        "src": "2813:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2813:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2812:18:0"
                  },
                  "returnParameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2839:0:0"
                  },
                  "scope": 70,
                  "src": "2786:54:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 71,
              "src": "184:2658:0",
              "usedErrors": []
            }
          ],
          "src": "38:2805:0"
        },
        "id": 0
      },
      "contracts/IPRBProxyFactory.sol": {
        "ast": {
          "absolutePath": "contracts/IPRBProxyFactory.sol",
          "exportedSymbols": {
            "IPRBProxyFactory": [
              125
            ]
          },
          "id": 126,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 72,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPRBProxyFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 73,
                "nodeType": "StructuredDocumentation",
                "src": "64:103:1",
                "text": "@title IPRBProxyFactory\n @author Paul Razvan Berg\n @notice Deploys new proxies with CREATE2."
              },
              "fullyImplemented": false,
              "id": 125,
              "linearizedBaseContracts": [
                125
              ],
              "name": "IPRBProxyFactory",
              "nameLocation": "177:16:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 74,
                    "nodeType": "StructuredDocumentation",
                    "src": "200:15:1",
                    "text": "EVENTS ///"
                  },
                  "id": 88,
                  "name": "DeployProxy",
                  "nameLocation": "226:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 76,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "origin",
                        "nameLocation": "263:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "247:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "247:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 78,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "295:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "279:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "279:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 80,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "329:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "313:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "313:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 82,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "seed",
                        "nameLocation": "352:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "344:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "344:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 84,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "salt",
                        "nameLocation": "374:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "366:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "366:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 86,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "396:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "388:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "388:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "237:170:1"
                  },
                  "src": "220:188:1"
                },
                {
                  "documentation": {
                    "id": 89,
                    "nodeType": "StructuredDocumentation",
                    "src": "453:142:1",
                    "text": "@notice Gets the next seed that will be used to deploy the proxy.\n @param eoa The externally owned account that will own the proxy."
                  },
                  "functionSelector": "37a6be16",
                  "id": 96,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNextSeed",
                  "nameLocation": "609:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "eoa",
                        "nameLocation": "629:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "621:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "621:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "620:13:1"
                  },
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "665:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "657:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "656:16:1"
                  },
                  "scope": 125,
                  "src": "600:73:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 97,
                    "nodeType": "StructuredDocumentation",
                    "src": "679:119:1",
                    "text": "@notice Mapping to track all deployed proxies.\n @param proxy The address of the proxy to make the check for."
                  },
                  "functionSelector": "29710388",
                  "id": 104,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isProxy",
                  "nameLocation": "812:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "828:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "820:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:15:1"
                  },
                  "returnParameters": {
                    "id": 103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 102,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "863:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "858:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:13:1"
                  },
                  "scope": 125,
                  "src": "803:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 105,
                    "nodeType": "StructuredDocumentation",
                    "src": "877:136:1",
                    "text": "@notice The release version of PRBProxy.\n @dev This is stored in the factory rather than the proxy to save gas for end users."
                  },
                  "functionSelector": "54fd4d50",
                  "id": 110,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nameLocation": "1027:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 106,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1034:2:1"
                  },
                  "returnParameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 110,
                        "src": "1060:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1060:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1059:9:1"
                  },
                  "scope": 125,
                  "src": "1018:51:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 111,
                    "nodeType": "StructuredDocumentation",
                    "src": "1118:174:1",
                    "text": "@notice Deploys a new proxy via CREATE2.\n @dev Sets \"msg.sender\" as the owner of the proxy.\n @return proxy The address of the newly deployed proxy contract."
                  },
                  "functionSelector": "775c300c",
                  "id": 116,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nameLocation": "1306:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 112,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1312:2:1"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "1349:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "1333:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1333:15:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1332:23:1"
                  },
                  "scope": 125,
                  "src": "1297:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 117,
                    "nodeType": "StructuredDocumentation",
                    "src": "1362:182:1",
                    "text": "@notice Deploys a new proxy via CREATE2, for the given owner.\n @param owner The owner of the proxy.\n @return proxy The address of the newly deployed proxy contract."
                  },
                  "functionSelector": "74912cd2",
                  "id": 124,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployFor",
                  "nameLocation": "1558:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "1568:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:15:1"
                  },
                  "returnParameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "1617:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 124,
                        "src": "1601:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1601:15:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1600:23:1"
                  },
                  "scope": 125,
                  "src": "1549:75:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 126,
              "src": "167:1459:1",
              "usedErrors": []
            }
          ],
          "src": "38:1589:1"
        },
        "id": 1
      },
      "contracts/IPRBProxyRegistry.sol": {
        "ast": {
          "absolutePath": "contracts/IPRBProxyRegistry.sol",
          "exportedSymbols": {
            "IPRBProxy": [
              70
            ],
            "IPRBProxyFactory": [
              125
            ],
            "IPRBProxyRegistry": [
              161
            ]
          },
          "id": 162,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 127,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:24:2"
            },
            {
              "absolutePath": "contracts/IPRBProxy.sol",
              "file": "./IPRBProxy.sol",
              "id": 128,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 162,
              "sourceUnit": 71,
              "src": "64:25:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IPRBProxyFactory.sol",
              "file": "./IPRBProxyFactory.sol",
              "id": 129,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 162,
              "sourceUnit": 126,
              "src": "90:32:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPRBProxyRegistry",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 130,
                "nodeType": "StructuredDocumentation",
                "src": "124:195:2",
                "text": "@title IPRBProxyRegistry\n @author Paul Razvan Berg\n @notice Deploys new proxies via the factory and keeps a registry of owners to proxies. Owners can only\n have one proxy at a time."
              },
              "fullyImplemented": false,
              "id": 161,
              "linearizedBaseContracts": [
                161
              ],
              "name": "IPRBProxyRegistry",
              "nameLocation": "329:17:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 131,
                    "nodeType": "StructuredDocumentation",
                    "src": "392:50:2",
                    "text": "@notice Address of the proxy factory contract."
                  },
                  "functionSelector": "c45a0155",
                  "id": 137,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "456:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "463:2:2"
                  },
                  "returnParameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "proxyFactory",
                        "nameLocation": "506:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "489:29:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                          "typeString": "contract IPRBProxyFactory"
                        },
                        "typeName": {
                          "id": 134,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 133,
                            "name": "IPRBProxyFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 125,
                            "src": "489:16:2"
                          },
                          "referencedDeclaration": 125,
                          "src": "489:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                            "typeString": "contract IPRBProxyFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "488:31:2"
                  },
                  "scope": 161,
                  "src": "447:73:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 138,
                    "nodeType": "StructuredDocumentation",
                    "src": "526:122:2",
                    "text": "@notice Gets the current proxy of the given owner.\n @param owner The address of the owner of the current proxy."
                  },
                  "functionSelector": "99563174",
                  "id": 146,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentProxy",
                  "nameLocation": "662:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 140,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "686:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "678:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "678:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "677:15:2"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "726:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "716:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPRBProxy_$70",
                          "typeString": "contract IPRBProxy"
                        },
                        "typeName": {
                          "id": 143,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 142,
                            "name": "IPRBProxy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 70,
                            "src": "716:9:2"
                          },
                          "referencedDeclaration": 70,
                          "src": "716:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPRBProxy_$70",
                            "typeString": "contract IPRBProxy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "715:17:2"
                  },
                  "scope": 161,
                  "src": "653:80:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 147,
                    "nodeType": "StructuredDocumentation",
                    "src": "782:263:2",
                    "text": "@notice Deploys a new proxy instance via the proxy factory.\n @dev Sets \"msg.sender\" as the owner of the proxy.\n Requirements:\n - All from \"deployFor\".\n @return proxy The address of the newly deployed proxy contract."
                  },
                  "functionSelector": "775c300c",
                  "id": 152,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nameLocation": "1059:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 148,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1065:2:2"
                  },
                  "returnParameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "1102:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "1086:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1086:15:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1085:23:2"
                  },
                  "scope": 161,
                  "src": "1050:59:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 153,
                    "nodeType": "StructuredDocumentation",
                    "src": "1115:344:2",
                    "text": "@notice Deploys a new proxy instance via the proxy factory, for the given owner.\n @dev Requirements:\n - The proxy must either not exist or its ownership must have been transferred by the owner.\n @param owner The owner of the proxy.\n @return proxy The address of the newly deployed proxy contract."
                  },
                  "functionSelector": "74912cd2",
                  "id": 160,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployFor",
                  "nameLocation": "1473:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1491:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "1483:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1483:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1482:15:2"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "1532:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "1516:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1516:15:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1515:23:2"
                  },
                  "scope": 161,
                  "src": "1464:75:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 162,
              "src": "319:1222:2",
              "usedErrors": []
            }
          ],
          "src": "38:1504:2"
        },
        "id": 2
      },
      "contracts/PRBProxy.sol": {
        "ast": {
          "absolutePath": "contracts/PRBProxy.sol",
          "exportedSymbols": {
            "IPRBProxy": [
              70
            ],
            "PRBProxy": [
              445
            ],
            "PRBProxy__ExecutionNotAuthorized": [
              175
            ],
            "PRBProxy__ExecutionReverted": [
              178
            ],
            "PRBProxy__NotOwner": [
              185
            ],
            "PRBProxy__OwnerChanged": [
              192
            ],
            "PRBProxy__TargetInvalid": [
              197
            ]
          },
          "id": 446,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 163,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:24:3"
            },
            {
              "absolutePath": "contracts/IPRBProxy.sol",
              "file": "./IPRBProxy.sol",
              "id": 164,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 446,
              "sourceUnit": 71,
              "src": "64:25:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "documentation": {
                "id": 165,
                "nodeType": "StructuredDocumentation",
                "src": "91:54:3",
                "text": "@notice Emitted when the caller is not the owner."
              },
              "id": 175,
              "name": "PRBProxy__ExecutionNotAuthorized",
              "nameLocation": "151:32:3",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 174,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 167,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "192:5:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 175,
                    "src": "184:13:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 166,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "184:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 169,
                    "mutability": "mutable",
                    "name": "caller",
                    "nameLocation": "207:6:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 175,
                    "src": "199:14:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 168,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "199:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 171,
                    "mutability": "mutable",
                    "name": "target",
                    "nameLocation": "223:6:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 175,
                    "src": "215:14:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 170,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "215:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 173,
                    "mutability": "mutable",
                    "name": "selector",
                    "nameLocation": "238:8:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 175,
                    "src": "231:15:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "typeName": {
                      "id": 172,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "231:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "183:64:3"
              },
              "src": "145:103:3"
            },
            {
              "documentation": {
                "id": 176,
                "nodeType": "StructuredDocumentation",
                "src": "250:60:3",
                "text": "@notice Emitted when execution reverted with no reason."
              },
              "id": 178,
              "name": "PRBProxy__ExecutionReverted",
              "nameLocation": "316:27:3",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 177,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "343:2:3"
              },
              "src": "310:36:3"
            },
            {
              "documentation": {
                "id": 179,
                "nodeType": "StructuredDocumentation",
                "src": "348:54:3",
                "text": "@notice Emitted when the caller is not the owner."
              },
              "id": 185,
              "name": "PRBProxy__NotOwner",
              "nameLocation": "408:18:3",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 184,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 181,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "435:5:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 185,
                    "src": "427:13:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 180,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "427:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 183,
                    "mutability": "mutable",
                    "name": "caller",
                    "nameLocation": "450:6:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 185,
                    "src": "442:14:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 182,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "442:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "426:31:3"
              },
              "src": "402:56:3"
            },
            {
              "documentation": {
                "id": 186,
                "nodeType": "StructuredDocumentation",
                "src": "460:71:3",
                "text": "@notice Emitted when the owner is changed during the DELEGATECALL."
              },
              "id": 192,
              "name": "PRBProxy__OwnerChanged",
              "nameLocation": "537:22:3",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 191,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 188,
                    "mutability": "mutable",
                    "name": "originalOwner",
                    "nameLocation": "568:13:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 192,
                    "src": "560:21:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 187,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "560:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 190,
                    "mutability": "mutable",
                    "name": "newOwner",
                    "nameLocation": "591:8:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 192,
                    "src": "583:16:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 189,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "583:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "559:41:3"
              },
              "src": "531:70:3"
            },
            {
              "documentation": {
                "id": 193,
                "nodeType": "StructuredDocumentation",
                "src": "603:81:3",
                "text": "@notice Emitted when passing an EOA or an undeployed contract as the target."
              },
              "id": 197,
              "name": "PRBProxy__TargetInvalid",
              "nameLocation": "690:23:3",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 196,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 195,
                    "mutability": "mutable",
                    "name": "target",
                    "nameLocation": "722:6:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 197,
                    "src": "714:14:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 194,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "714:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "713:16:3"
              },
              "src": "684:46:3"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 199,
                    "name": "IPRBProxy",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 70,
                    "src": "802:9:3"
                  },
                  "id": 200,
                  "nodeType": "InheritanceSpecifier",
                  "src": "802:9:3"
                }
              ],
              "canonicalName": "PRBProxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 198,
                "nodeType": "StructuredDocumentation",
                "src": "732:49:3",
                "text": "@title PRBProxy\n @author Paul Razvan Berg"
              },
              "fullyImplemented": true,
              "id": 445,
              "linearizedBaseContracts": [
                445,
                70
              ],
              "name": "PRBProxy",
              "nameLocation": "790:8:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    35
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "846:25:3",
                    "text": "@inheritdoc IPRBProxy"
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 204,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "900:5:3",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 203,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "891:8:3"
                  },
                  "scope": 445,
                  "src": "876:29:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    41
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 205,
                    "nodeType": "StructuredDocumentation",
                    "src": "912:25:3",
                    "text": "@inheritdoc IPRBProxy"
                  },
                  "functionSelector": "9d159568",
                  "id": 208,
                  "mutability": "mutable",
                  "name": "minGasReserve",
                  "nameLocation": "966:13:3",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 207,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "957:8:3"
                  },
                  "scope": 445,
                  "src": "942:37:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 209,
                    "nodeType": "StructuredDocumentation",
                    "src": "1016:83:3",
                    "text": "@notice Maps envoys to target contracts to function selectors to boolean flags."
                  },
                  "id": 217,
                  "mutability": "mutable",
                  "name": "permissions",
                  "nameLocation": "1177:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "1104:84:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$_$",
                    "typeString": "mapping(address => mapping(address => mapping(bytes4 => bool)))"
                  },
                  "typeName": {
                    "id": 216,
                    "keyType": {
                      "id": 210,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1112:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1104:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$_$",
                      "typeString": "mapping(address => mapping(address => mapping(bytes4 => bool)))"
                    },
                    "valueType": {
                      "id": 215,
                      "keyType": {
                        "id": 211,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1131:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1123:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                        "typeString": "mapping(address => mapping(bytes4 => bool))"
                      },
                      "valueType": {
                        "id": 214,
                        "keyType": {
                          "id": 212,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1150:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1142:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        },
                        "valueType": {
                          "id": 213,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1160:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "1234:122:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 221,
                            "name": "minGasReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 208,
                            "src": "1244:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "355f303030",
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1260:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5000_by_1",
                              "typeString": "int_const 5000"
                            },
                            "value": "5_000"
                          },
                          "src": "1244:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 224,
                        "nodeType": "ExpressionStatement",
                        "src": "1244:21:3"
                      },
                      {
                        "expression": {
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 225,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "1275:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 226,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1283:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1283:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1275:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 229,
                        "nodeType": "ExpressionStatement",
                        "src": "1275:18:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1334:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1326:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 231,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1326:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1326:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 235,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1338:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1338:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 230,
                            "name": "TransferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1308:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1308:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 238,
                        "nodeType": "EmitStatement",
                        "src": "1303:46:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "1195:20:3",
                    "text": "CONSTRUCTOR ///"
                  },
                  "id": 240,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1231:2:3"
                  },
                  "returnParameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1234:0:3"
                  },
                  "scope": 445,
                  "src": "1220:136:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 244,
                    "nodeType": "Block",
                    "src": "1487:2:3",
                    "statements": []
                  },
                  "documentation": {
                    "id": 241,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:62:3",
                    "text": "@dev Called when Ether is sent and the call data is empty."
                  },
                  "id": 245,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 242,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1467:2:3"
                  },
                  "returnParameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1487:0:3"
                  },
                  "scope": 445,
                  "src": "1460:29:3",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    29
                  ],
                  "body": {
                    "id": 266,
                    "nodeType": "Block",
                    "src": "1703:60:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 258,
                                "name": "permissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "1720:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$_$",
                                  "typeString": "mapping(address => mapping(address => mapping(bytes4 => bool)))"
                                }
                              },
                              "id": 260,
                              "indexExpression": {
                                "id": 259,
                                "name": "envoy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 248,
                                "src": "1732:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1720:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(bytes4 => bool))"
                              }
                            },
                            "id": 262,
                            "indexExpression": {
                              "id": 261,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 250,
                              "src": "1739:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1720:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                              "typeString": "mapping(bytes4 => bool)"
                            }
                          },
                          "id": 264,
                          "indexExpression": {
                            "id": 263,
                            "name": "selector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "1747:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1720:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 257,
                        "id": 265,
                        "nodeType": "Return",
                        "src": "1713:43:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 246,
                    "nodeType": "StructuredDocumentation",
                    "src": "1534:25:3",
                    "text": "@inheritdoc IPRBProxy"
                  },
                  "functionSelector": "da8d882c",
                  "id": 267,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPermission",
                  "nameLocation": "1573:13:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 254,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1679:8:3"
                  },
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "envoy",
                        "nameLocation": "1604:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "1596:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1596:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "1627:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "1619:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1619:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "1650:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "1643:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1643:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1586:78:3"
                  },
                  "returnParameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 267,
                        "src": "1697:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1697:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1696:6:3"
                  },
                  "scope": 445,
                  "src": "1564:199:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    51
                  ],
                  "body": {
                    "id": 374,
                    "nodeType": "Block",
                    "src": "1954:1701:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 278,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "2034:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 279,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2043:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2043:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2034:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 306,
                        "nodeType": "IfStatement",
                        "src": "2030:326:3",
                        "trueBody": {
                          "id": 305,
                          "nodeType": "Block",
                          "src": "2055:301:3",
                          "statements": [
                            {
                              "assignments": [
                                283
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 283,
                                  "mutability": "mutable",
                                  "name": "selector",
                                  "nameLocation": "2076:8:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 305,
                                  "src": "2069:15:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 282,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2069:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 284,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2069:15:3"
                            },
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "2107:69:3",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2125:37:3",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data.offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "2150:11:3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2137:12:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2137:25:3"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "selector",
                                        "nodeType": "YulIdentifier",
                                        "src": "2125:8:3"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "evmVersion": "london",
                              "externalReferences": [
                                {
                                  "declaration": 272,
                                  "isOffset": true,
                                  "isSlot": false,
                                  "src": "2150:11:3",
                                  "suffix": "offset",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 283,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2125:8:3",
                                  "valueSize": 1
                                }
                              ],
                              "id": 285,
                              "nodeType": "InlineAssembly",
                              "src": "2098:78:3"
                            },
                            {
                              "condition": {
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "2193:42:3",
                                "subExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 286,
                                        "name": "permissions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 217,
                                        "src": "2194:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$_$",
                                          "typeString": "mapping(address => mapping(address => mapping(bytes4 => bool)))"
                                        }
                                      },
                                      "id": 289,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 287,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "2206:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 288,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2206:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2194:23:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                                        "typeString": "mapping(address => mapping(bytes4 => bool))"
                                      }
                                    },
                                    "id": 291,
                                    "indexExpression": {
                                      "id": 290,
                                      "name": "target",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 270,
                                      "src": "2218:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2194:31:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                                      "typeString": "mapping(bytes4 => bool)"
                                    }
                                  },
                                  "id": 293,
                                  "indexExpression": {
                                    "id": 292,
                                    "name": "selector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 283,
                                    "src": "2226:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2194:41:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 304,
                              "nodeType": "IfStatement",
                              "src": "2189:157:3",
                              "trueBody": {
                                "id": 303,
                                "nodeType": "Block",
                                "src": "2237:109:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 296,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 204,
                                          "src": "2295:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 297,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "2302:3:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 298,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2302:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 299,
                                          "name": "target",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 270,
                                          "src": "2314:6:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 300,
                                          "name": "selector",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 283,
                                          "src": "2322:8:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                          }
                                        ],
                                        "id": 295,
                                        "name": "PRBProxy__ExecutionNotAuthorized",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 175,
                                        "src": "2262:32:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_address_$_t_bytes4_$returns$__$",
                                          "typeString": "function (address,address,address,bytes4) pure"
                                        }
                                      },
                                      "id": 301,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2262:69:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 302,
                                    "nodeType": "RevertStatement",
                                    "src": "2255:76:3"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 307,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 270,
                                "src": "2424:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "2424:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2424:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2446:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2424:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 317,
                        "nodeType": "IfStatement",
                        "src": "2420:92:3",
                        "trueBody": {
                          "id": 316,
                          "nodeType": "Block",
                          "src": "2449:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 313,
                                    "name": "target",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 270,
                                    "src": "2494:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 312,
                                  "name": "PRBProxy__TargetInvalid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 197,
                                  "src": "2470:23:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2470:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 315,
                              "nodeType": "RevertStatement",
                              "src": "2463:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          319
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 319,
                            "mutability": "mutable",
                            "name": "owner_",
                            "nameLocation": "2639:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 374,
                            "src": "2631:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 318,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2631:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 321,
                        "initialValue": {
                          "id": 320,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "2648:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2631:22:3"
                      },
                      {
                        "assignments": [
                          323
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 323,
                            "mutability": "mutable",
                            "name": "stipend",
                            "nameLocation": "2764:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 374,
                            "src": "2756:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 322,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2756:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 328,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 324,
                              "name": "gasleft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -7,
                              "src": "2774:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2774:9:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 326,
                            "name": "minGasReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 208,
                            "src": "2786:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2774:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2756:43:3"
                      },
                      {
                        "assignments": [
                          330
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 330,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2864:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 374,
                            "src": "2859:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 329,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2859:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 331,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2859:12:3"
                      },
                      {
                        "expression": {
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 332,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 330,
                                "src": "2882:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 333,
                                "name": "response",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 276,
                                "src": "2891:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 334,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2881:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 339,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 272,
                                "src": "2939:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 335,
                                  "name": "target",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 270,
                                  "src": "2903:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "delegatecall",
                                "nodeType": "MemberAccess",
                                "src": "2903:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) returns (bool,bytes memory)"
                                }
                              },
                              "id": 338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "gas"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 337,
                                  "name": "stipend",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 323,
                                  "src": "2929:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "2903:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                                "typeString": "function (bytes memory) returns (bool,bytes memory)"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2903:41:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "2881:63:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 342,
                        "nodeType": "ExpressionStatement",
                        "src": "2881:63:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 343,
                            "name": "owner_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "3013:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 344,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "3023:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3013:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 352,
                        "nodeType": "IfStatement",
                        "src": "3009:90:3",
                        "trueBody": {
                          "id": 351,
                          "nodeType": "Block",
                          "src": "3030:69:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 347,
                                    "name": "owner_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 319,
                                    "src": "3074:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 348,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 204,
                                    "src": "3082:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 346,
                                  "name": "PRBProxy__OwnerChanged",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 192,
                                  "src": "3051:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address) pure"
                                  }
                                },
                                "id": 349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3051:37:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 350,
                              "nodeType": "RevertStatement",
                              "src": "3044:44:3"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 354,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "3152:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 355,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "3160:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 356,
                              "name": "response",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "3166:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 353,
                            "name": "Execute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3144:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes memory,bytes memory)"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3144:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 358,
                        "nodeType": "EmitStatement",
                        "src": "3139:36:3"
                      },
                      {
                        "condition": {
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3242:8:3",
                          "subExpression": {
                            "id": 359,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "3243:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 373,
                        "nodeType": "IfStatement",
                        "src": "3238:411:3",
                        "trueBody": {
                          "id": 372,
                          "nodeType": "Block",
                          "src": "3252:397:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 361,
                                    "name": "response",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 276,
                                    "src": "3361:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3361:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 363,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3379:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3361:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 370,
                                "nodeType": "Block",
                                "src": "3570:69:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 367,
                                        "name": "PRBProxy__ExecutionReverted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 178,
                                        "src": "3595:27:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 368,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3595:29:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 369,
                                    "nodeType": "RevertStatement",
                                    "src": "3588:36:3"
                                  }
                                ]
                              },
                              "id": 371,
                              "nodeType": "IfStatement",
                              "src": "3357:282:3",
                              "trueBody": {
                                "id": 366,
                                "nodeType": "Block",
                                "src": "3382:182:3",
                                "statements": [
                                  {
                                    "AST": {
                                      "nodeType": "YulBlock",
                                      "src": "3409:141:3",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "3431:38:3",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "response",
                                                "nodeType": "YulIdentifier",
                                                "src": "3460:8:3"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "3454:5:3"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3454:15:3"
                                          },
                                          "variables": [
                                            {
                                              "name": "returndata_size",
                                              "nodeType": "YulTypedName",
                                              "src": "3435:15:3",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3501:2:3",
                                                    "type": "",
                                                    "value": "32"
                                                  },
                                                  {
                                                    "name": "response",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3505:8:3"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3497:3:3"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3497:17:3"
                                              },
                                              {
                                                "name": "returndata_size",
                                                "nodeType": "YulIdentifier",
                                                "src": "3516:15:3"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "3490:6:3"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3490:42:3"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "3490:42:3"
                                        }
                                      ]
                                    },
                                    "evmVersion": "london",
                                    "externalReferences": [
                                      {
                                        "declaration": 276,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "3460:8:3",
                                        "valueSize": 1
                                      },
                                      {
                                        "declaration": 276,
                                        "isOffset": false,
                                        "isSlot": false,
                                        "src": "3505:8:3",
                                        "valueSize": 1
                                      }
                                    ],
                                    "id": 365,
                                    "nodeType": "InlineAssembly",
                                    "src": "3400:150:3"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 268,
                    "nodeType": "StructuredDocumentation",
                    "src": "1812:25:3",
                    "text": "@inheritdoc IPRBProxy"
                  },
                  "functionSelector": "1cff79cd",
                  "id": 375,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nameLocation": "1851:7:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 274,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1913:8:3"
                  },
                  "parameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "1867:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 375,
                        "src": "1859:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1859:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1890:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 375,
                        "src": "1875:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1875:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1858:37:3"
                  },
                  "returnParameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 276,
                        "mutability": "mutable",
                        "name": "response",
                        "nameLocation": "1944:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 375,
                        "src": "1931:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1931:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1930:23:3"
                  },
                  "scope": 445,
                  "src": "1842:1813:3",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    63
                  ],
                  "body": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "3835:169:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 388,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "3849:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 389,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3858:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3858:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3849:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 399,
                        "nodeType": "IfStatement",
                        "src": "3845:94:3",
                        "trueBody": {
                          "id": 398,
                          "nodeType": "Block",
                          "src": "3870:69:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 393,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 204,
                                    "src": "3910:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 394,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3917:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3917:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 392,
                                  "name": "PRBProxy__NotOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 185,
                                  "src": "3891:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address) pure"
                                  }
                                },
                                "id": 396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3891:37:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 397,
                              "nodeType": "RevertStatement",
                              "src": "3884:44:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 400,
                                  "name": "permissions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 217,
                                  "src": "3948:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$_$",
                                    "typeString": "mapping(address => mapping(address => mapping(bytes4 => bool)))"
                                  }
                                },
                                "id": 404,
                                "indexExpression": {
                                  "id": 401,
                                  "name": "envoy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 378,
                                  "src": "3960:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3948:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes4_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(bytes4 => bool))"
                                }
                              },
                              "id": 405,
                              "indexExpression": {
                                "id": 402,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 380,
                                "src": "3967:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3948:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                                "typeString": "mapping(bytes4 => bool)"
                              }
                            },
                            "id": 406,
                            "indexExpression": {
                              "id": 403,
                              "name": "selector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "3975:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3948:36:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 407,
                            "name": "permission",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "3987:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3948:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "3948:49:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 376,
                    "nodeType": "StructuredDocumentation",
                    "src": "3661:25:3",
                    "text": "@inheritdoc IPRBProxy"
                  },
                  "functionSelector": "e64624fa",
                  "id": 411,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setPermission",
                  "nameLocation": "3700:13:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 386,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3826:8:3"
                  },
                  "parameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "envoy",
                        "nameLocation": "3731:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "3723:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3723:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 380,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3754:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "3746:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3746:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 382,
                        "mutability": "mutable",
                        "name": "selector",
                        "nameLocation": "3777:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "3770:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3770:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "permission",
                        "nameLocation": "3800:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "3795:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3795:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3713:103:3"
                  },
                  "returnParameters": {
                    "id": 387,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3835:0:3"
                  },
                  "scope": 445,
                  "src": "3691:313:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    69
                  ],
                  "body": {
                    "id": 443,
                    "nodeType": "Block",
                    "src": "4103:228:3",
                    "statements": [
                      {
                        "assignments": [
                          419
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 419,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "4121:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 443,
                            "src": "4113:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 418,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4113:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 421,
                        "initialValue": {
                          "id": 420,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "4132:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4113:24:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 422,
                            "name": "oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "4151:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 423,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4163:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4163:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4151:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 433,
                        "nodeType": "IfStatement",
                        "src": "4147:100:3",
                        "trueBody": {
                          "id": 432,
                          "nodeType": "Block",
                          "src": "4175:72:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 427,
                                    "name": "oldOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 419,
                                    "src": "4215:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 428,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4225:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 429,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4225:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 426,
                                  "name": "PRBProxy__NotOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 185,
                                  "src": "4196:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address) pure"
                                  }
                                },
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4196:40:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 431,
                              "nodeType": "RevertStatement",
                              "src": "4189:47:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 434,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "4256:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 435,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "4264:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4256:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 437,
                        "nodeType": "ExpressionStatement",
                        "src": "4256:16:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 439,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "4305:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 440,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "4315:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 438,
                            "name": "TransferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "4287:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4287:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 442,
                        "nodeType": "EmitStatement",
                        "src": "4282:42:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 412,
                    "nodeType": "StructuredDocumentation",
                    "src": "4010:25:3",
                    "text": "@inheritdoc IPRBProxy"
                  },
                  "functionSelector": "f2fde38b",
                  "id": 444,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "4049:17:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 416,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4094:8:3"
                  },
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "4075:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 444,
                        "src": "4067:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4067:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4066:18:3"
                  },
                  "returnParameters": {
                    "id": 417,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4103:0:3"
                  },
                  "scope": 445,
                  "src": "4040:291:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 446,
              "src": "781:3552:3",
              "usedErrors": [
                175,
                178,
                185,
                192,
                197
              ]
            }
          ],
          "src": "38:4296:3"
        },
        "id": 3
      },
      "contracts/PRBProxyFactory.sol": {
        "ast": {
          "absolutePath": "contracts/PRBProxyFactory.sol",
          "exportedSymbols": {
            "IPRBProxy": [
              70
            ],
            "IPRBProxyFactory": [
              125
            ],
            "PRBProxy": [
              445
            ],
            "PRBProxyFactory": [
              599
            ],
            "PRBProxy__ExecutionNotAuthorized": [
              175
            ],
            "PRBProxy__ExecutionReverted": [
              178
            ],
            "PRBProxy__NotOwner": [
              185
            ],
            "PRBProxy__OwnerChanged": [
              192
            ],
            "PRBProxy__TargetInvalid": [
              197
            ]
          },
          "id": 600,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 447,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:24:4"
            },
            {
              "absolutePath": "contracts/IPRBProxy.sol",
              "file": "./IPRBProxy.sol",
              "id": 448,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 600,
              "sourceUnit": 71,
              "src": "64:25:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IPRBProxyFactory.sol",
              "file": "./IPRBProxyFactory.sol",
              "id": 449,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 600,
              "sourceUnit": 126,
              "src": "90:32:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/PRBProxy.sol",
              "file": "./PRBProxy.sol",
              "id": 450,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 600,
              "sourceUnit": 446,
              "src": "123:24:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 452,
                    "name": "IPRBProxyFactory",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 125,
                    "src": "233:16:4"
                  },
                  "id": 453,
                  "nodeType": "InheritanceSpecifier",
                  "src": "233:16:4"
                }
              ],
              "canonicalName": "PRBProxyFactory",
              "contractDependencies": [
                445
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 451,
                "nodeType": "StructuredDocumentation",
                "src": "149:56:4",
                "text": "@title PRBProxyFactory\n @author Paul Razvan Berg"
              },
              "fullyImplemented": true,
              "id": 599,
              "linearizedBaseContracts": [
                599,
                125
              ],
              "name": "PRBProxyFactory",
              "nameLocation": "214:15:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    110
                  ],
                  "constant": true,
                  "documentation": {
                    "id": 454,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:32:4",
                    "text": "@inheritdoc IPRBProxyFactory"
                  },
                  "functionSelector": "54fd4d50",
                  "id": 458,
                  "mutability": "constant",
                  "name": "version",
                  "nameLocation": "354:7:4",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 456,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "345:8:4"
                  },
                  "scope": 599,
                  "src": "321:44:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "364:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 459,
                    "nodeType": "StructuredDocumentation",
                    "src": "402:56:4",
                    "text": "@dev Internal mapping to track all deployed proxies."
                  },
                  "id": 463,
                  "mutability": "mutable",
                  "name": "proxies",
                  "nameLocation": "497:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "463:41:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 462,
                    "keyType": {
                      "id": 460,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "471:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "463:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 461,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "482:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 464,
                    "nodeType": "StructuredDocumentation",
                    "src": "511:70:4",
                    "text": "@dev Internal mapping to track the next seed to be used by an EOA."
                  },
                  "id": 468,
                  "mutability": "mutable",
                  "name": "nextSeeds",
                  "nameLocation": "623:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 599,
                  "src": "586:46:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                    "typeString": "mapping(address => bytes32)"
                  },
                  "typeName": {
                    "id": 467,
                    "keyType": {
                      "id": 465,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "594:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "586:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                      "typeString": "mapping(address => bytes32)"
                    },
                    "valueType": {
                      "id": 466,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "605:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    96
                  ],
                  "body": {
                    "id": 483,
                    "nodeType": "Block",
                    "src": "799:42:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 477,
                            "name": "nextSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "809:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 478,
                              "name": "nextSeeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 468,
                              "src": "820:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                "typeString": "mapping(address => bytes32)"
                              }
                            },
                            "id": 480,
                            "indexExpression": {
                              "id": 479,
                              "name": "eoa",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "830:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "820:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "809:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 482,
                        "nodeType": "ExpressionStatement",
                        "src": "809:25:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 469,
                    "nodeType": "StructuredDocumentation",
                    "src": "678:32:4",
                    "text": "@inheritdoc IPRBProxyFactory"
                  },
                  "functionSelector": "37a6be16",
                  "id": 484,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNextSeed",
                  "nameLocation": "724:11:4",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 473,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "763:8:4"
                  },
                  "parameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "eoa",
                        "nameLocation": "744:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "736:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "736:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "735:13:4"
                  },
                  "returnParameters": {
                    "id": 476,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 475,
                        "mutability": "mutable",
                        "name": "nextSeed",
                        "nameLocation": "789:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 484,
                        "src": "781:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "781:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "780:18:4"
                  },
                  "scope": 599,
                  "src": "715:126:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    104
                  ],
                  "body": {
                    "id": 499,
                    "nodeType": "Block",
                    "src": "961:40:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 493,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "971:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 494,
                              "name": "proxies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "980:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 496,
                            "indexExpression": {
                              "id": 495,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "988:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "980:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "971:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 498,
                        "nodeType": "ExpressionStatement",
                        "src": "971:23:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 485,
                    "nodeType": "StructuredDocumentation",
                    "src": "847:32:4",
                    "text": "@inheritdoc IPRBProxyFactory"
                  },
                  "functionSelector": "29710388",
                  "id": 500,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isProxy",
                  "nameLocation": "893:7:4",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 489,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "930:8:4"
                  },
                  "parameters": {
                    "id": 488,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "909:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 500,
                        "src": "901:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "901:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "900:15:4"
                  },
                  "returnParameters": {
                    "id": 492,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "953:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 500,
                        "src": "948:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "948:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "947:13:4"
                  },
                  "scope": 599,
                  "src": "884:117:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    116
                  ],
                  "body": {
                    "id": 514,
                    "nodeType": "Block",
                    "src": "1155:46:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 507,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 505,
                            "src": "1165:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 509,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1183:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1183:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 508,
                              "name": "deployFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "1173:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_payable_$",
                                "typeString": "function (address) returns (address payable)"
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1173:21:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1165:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 513,
                        "nodeType": "ExpressionStatement",
                        "src": "1165:29:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 501,
                    "nodeType": "StructuredDocumentation",
                    "src": "1050:32:4",
                    "text": "@inheritdoc IPRBProxyFactory"
                  },
                  "functionSelector": "775c300c",
                  "id": 515,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nameLocation": "1096:6:4",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 503,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1114:8:4"
                  },
                  "parameters": {
                    "id": 502,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1102:2:4"
                  },
                  "returnParameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "1148:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "1132:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1132:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1131:23:4"
                  },
                  "scope": 599,
                  "src": "1087:114:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    124
                  ],
                  "body": {
                    "id": 597,
                    "nodeType": "Block",
                    "src": "1326:785:4",
                    "statements": [
                      {
                        "assignments": [
                          525
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 525,
                            "mutability": "mutable",
                            "name": "seed",
                            "nameLocation": "1344:4:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 597,
                            "src": "1336:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 524,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1336:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 530,
                        "initialValue": {
                          "baseExpression": {
                            "id": 526,
                            "name": "nextSeeds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "1351:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 529,
                          "indexExpression": {
                            "expression": {
                              "id": 527,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "1361:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "1361:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1351:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1336:35:4"
                      },
                      {
                        "assignments": [
                          532
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 532,
                            "mutability": "mutable",
                            "name": "salt",
                            "nameLocation": "1504:4:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 597,
                            "src": "1496:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 531,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1496:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 541,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 536,
                                    "name": "tx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -26,
                                    "src": "1532:2:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_transaction",
                                      "typeString": "tx"
                                    }
                                  },
                                  "id": 537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "origin",
                                  "nodeType": "MemberAccess",
                                  "src": "1532:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 538,
                                  "name": "seed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 525,
                                  "src": "1543:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 534,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1521:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "1521:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1521:27:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 533,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1511:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1511:38:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1496:53:4"
                      },
                      {
                        "expression": {
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 542,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "1602:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 547,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "1618:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PRBProxy_$445_$",
                                      "typeString": "function () returns (contract PRBProxy)"
                                    },
                                    "typeName": {
                                      "id": 546,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 545,
                                        "name": "PRBProxy",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 445,
                                        "src": "1622:8:4"
                                      },
                                      "referencedDeclaration": 445,
                                      "src": "1622:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PRBProxy_$445",
                                        "typeString": "contract PRBProxy"
                                      }
                                    }
                                  },
                                  "id": 549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "salt"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 548,
                                      "name": "salt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 532,
                                      "src": "1638:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "src": "1618:26:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PRBProxy_$445_$salt",
                                    "typeString": "function () returns (contract PRBProxy)"
                                  }
                                },
                                "id": 550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1618:28:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PRBProxy_$445",
                                  "typeString": "contract PRBProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PRBProxy_$445",
                                  "typeString": "contract PRBProxy"
                                }
                              ],
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1610:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 543,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1610:8:4",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1610:37:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1602:45:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 553,
                        "nodeType": "ExpressionStatement",
                        "src": "1602:45:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 558,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "1778:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 555,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "1753:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 554,
                                "name": "IPRBProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70,
                                "src": "1743:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPRBProxy_$70_$",
                                  "typeString": "type(contract IPRBProxy)"
                                }
                              },
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1743:16:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPRBProxy_$70",
                                "typeString": "contract IPRBProxy"
                              }
                            },
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69,
                            "src": "1743:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1743:41:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 560,
                        "nodeType": "ExpressionStatement",
                        "src": "1743:41:4"
                      },
                      {
                        "expression": {
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 561,
                              "name": "proxies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "1834:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 563,
                            "indexExpression": {
                              "id": 562,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "1842:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1834:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1851:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1834:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 566,
                        "nodeType": "ExpressionStatement",
                        "src": "1834:21:4"
                      },
                      {
                        "id": 582,
                        "nodeType": "UncheckedBlock",
                        "src": "1897:84:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 567,
                                  "name": "nextSeeds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 468,
                                  "src": "1921:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                    "typeString": "mapping(address => bytes32)"
                                  }
                                },
                                "id": 570,
                                "indexExpression": {
                                  "expression": {
                                    "id": 568,
                                    "name": "tx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -26,
                                    "src": "1931:2:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_transaction",
                                      "typeString": "tx"
                                    }
                                  },
                                  "id": 569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "origin",
                                  "nodeType": "MemberAccess",
                                  "src": "1931:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "1921:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 578,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 575,
                                          "name": "seed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 525,
                                          "src": "1960:4:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 574,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1952:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 573,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1952:7:4",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 576,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1952:13:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 577,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1968:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "1952:17:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 572,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1944:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 571,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1944:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1944:26:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1921:49:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 581,
                            "nodeType": "ExpressionStatement",
                            "src": "1921:49:4"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 584,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "2047:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "src": "2047:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 586,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2058:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2058:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 588,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "2070:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 589,
                              "name": "seed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 525,
                              "src": "2077:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 590,
                              "name": "salt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "2083:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 593,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 522,
                                  "src": "2097:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2089:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 591,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2089:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2089:14:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 583,
                            "name": "DeployProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88,
                            "src": "2035:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address,bytes32,bytes32,address)"
                            }
                          },
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2035:69:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 596,
                        "nodeType": "EmitStatement",
                        "src": "2030:74:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 516,
                    "nodeType": "StructuredDocumentation",
                    "src": "1207:32:4",
                    "text": "@inheritdoc IPRBProxyFactory"
                  },
                  "functionSelector": "74912cd2",
                  "id": 598,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployFor",
                  "nameLocation": "1253:9:4",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 520,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1285:8:4"
                  },
                  "parameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1271:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "1263:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1263:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1262:15:4"
                  },
                  "returnParameters": {
                    "id": 523,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 522,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "1319:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "1303:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1303:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1302:23:4"
                  },
                  "scope": 599,
                  "src": "1244:867:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 600,
              "src": "205:1908:4",
              "usedErrors": []
            }
          ],
          "src": "38:2076:4"
        },
        "id": 4
      },
      "contracts/PRBProxyRegistry.sol": {
        "ast": {
          "absolutePath": "contracts/PRBProxyRegistry.sol",
          "exportedSymbols": {
            "IPRBProxy": [
              70
            ],
            "IPRBProxyFactory": [
              125
            ],
            "IPRBProxyRegistry": [
              161
            ],
            "PRBProxyRegistry": [
              721
            ],
            "PRBProxyRegistry__ProxyAlreadyExists": [
              609
            ]
          },
          "id": 722,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 601,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "38:24:5"
            },
            {
              "absolutePath": "contracts/IPRBProxy.sol",
              "file": "./IPRBProxy.sol",
              "id": 602,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 722,
              "sourceUnit": 71,
              "src": "64:25:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IPRBProxyFactory.sol",
              "file": "./IPRBProxyFactory.sol",
              "id": 603,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 722,
              "sourceUnit": 126,
              "src": "90:32:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IPRBProxyRegistry.sol",
              "file": "./IPRBProxyRegistry.sol",
              "id": 604,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 722,
              "sourceUnit": 162,
              "src": "123:33:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "documentation": {
                "id": 605,
                "nodeType": "StructuredDocumentation",
                "src": "158:69:5",
                "text": "@notice Emitted when a proxy already exists for the given owner."
              },
              "id": 609,
              "name": "PRBProxyRegistry__ProxyAlreadyExists",
              "nameLocation": "233:36:5",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 608,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 607,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "278:5:5",
                    "nodeType": "VariableDeclaration",
                    "scope": 609,
                    "src": "270:13:5",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 606,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "270:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "269:15:5"
              },
              "src": "227:58:5"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 611,
                    "name": "IPRBProxyRegistry",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 161,
                    "src": "373:17:5"
                  },
                  "id": 612,
                  "nodeType": "InheritanceSpecifier",
                  "src": "373:17:5"
                }
              ],
              "canonicalName": "PRBProxyRegistry",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 610,
                "nodeType": "StructuredDocumentation",
                "src": "287:57:5",
                "text": "@title PRBProxyRegistry\n @author Paul Razvan Berg"
              },
              "fullyImplemented": true,
              "id": 721,
              "linearizedBaseContracts": [
                721,
                161
              ],
              "name": "PRBProxyRegistry",
              "nameLocation": "353:16:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    137
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 613,
                    "nodeType": "StructuredDocumentation",
                    "src": "425:33:5",
                    "text": "@inheritdoc IPRBProxyRegistry"
                  },
                  "functionSelector": "c45a0155",
                  "id": 617,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "496:7:5",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 616,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "487:8:5"
                  },
                  "scope": 721,
                  "src": "463:40:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                    "typeString": "contract IPRBProxyFactory"
                  },
                  "typeName": {
                    "id": 615,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 614,
                      "name": "IPRBProxyFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 125,
                      "src": "463:16:5"
                    },
                    "referencedDeclaration": 125,
                    "src": "463:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                      "typeString": "contract IPRBProxyFactory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 618,
                    "nodeType": "StructuredDocumentation",
                    "src": "540:58:5",
                    "text": "@notice Internal mapping of owners to current proxies."
                  },
                  "id": 623,
                  "mutability": "mutable",
                  "name": "currentProxies",
                  "nameLocation": "642:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 721,
                  "src": "603:53:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IPRBProxy_$70_$",
                    "typeString": "mapping(address => contract IPRBProxy)"
                  },
                  "typeName": {
                    "id": 622,
                    "keyType": {
                      "id": 619,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "611:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "603:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IPRBProxy_$70_$",
                      "typeString": "mapping(address => contract IPRBProxy)"
                    },
                    "valueType": {
                      "id": 621,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 620,
                        "name": "IPRBProxy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 70,
                        "src": "622:9:5"
                      },
                      "referencedDeclaration": 70,
                      "src": "622:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPRBProxy_$70",
                        "typeString": "contract IPRBProxy"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 634,
                    "nodeType": "Block",
                    "src": "727:35:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 630,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 617,
                            "src": "737:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                              "typeString": "contract IPRBProxyFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 631,
                            "name": "factory_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "747:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                              "typeString": "contract IPRBProxyFactory"
                            }
                          },
                          "src": "737:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                            "typeString": "contract IPRBProxyFactory"
                          }
                        },
                        "id": 633,
                        "nodeType": "ExpressionStatement",
                        "src": "737:18:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 624,
                    "nodeType": "StructuredDocumentation",
                    "src": "663:20:5",
                    "text": "CONSTRUCTOR ///"
                  },
                  "id": 635,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "factory_",
                        "nameLocation": "717:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 635,
                        "src": "700:25:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                          "typeString": "contract IPRBProxyFactory"
                        },
                        "typeName": {
                          "id": 626,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 625,
                            "name": "IPRBProxyFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 125,
                            "src": "700:16:5"
                          },
                          "referencedDeclaration": 125,
                          "src": "700:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                            "typeString": "contract IPRBProxyFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "699:27:5"
                  },
                  "returnParameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "727:0:5"
                  },
                  "scope": 721,
                  "src": "688:74:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    146
                  ],
                  "body": {
                    "id": 651,
                    "nodeType": "Block",
                    "src": "934:46:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 645,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "944:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPRBProxy_$70",
                              "typeString": "contract IPRBProxy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 646,
                              "name": "currentProxies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "952:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IPRBProxy_$70_$",
                                "typeString": "mapping(address => contract IPRBProxy)"
                              }
                            },
                            "id": 648,
                            "indexExpression": {
                              "id": 647,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 638,
                              "src": "967:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "952:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPRBProxy_$70",
                              "typeString": "contract IPRBProxy"
                            }
                          },
                          "src": "944:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPRBProxy_$70",
                            "typeString": "contract IPRBProxy"
                          }
                        },
                        "id": 650,
                        "nodeType": "ExpressionStatement",
                        "src": "944:29:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 636,
                    "nodeType": "StructuredDocumentation",
                    "src": "807:33:5",
                    "text": "@inheritdoc IPRBProxyRegistry"
                  },
                  "functionSelector": "99563174",
                  "id": 652,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentProxy",
                  "nameLocation": "854:15:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 640,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "899:8:5"
                  },
                  "parameters": {
                    "id": 639,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 638,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "878:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "870:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 637,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "870:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "869:15:5"
                  },
                  "returnParameters": {
                    "id": 644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "927:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "917:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPRBProxy_$70",
                          "typeString": "contract IPRBProxy"
                        },
                        "typeName": {
                          "id": 642,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 641,
                            "name": "IPRBProxy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 70,
                            "src": "917:9:5"
                          },
                          "referencedDeclaration": 70,
                          "src": "917:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPRBProxy_$70",
                            "typeString": "contract IPRBProxy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "916:17:5"
                  },
                  "scope": 721,
                  "src": "845:135:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    152
                  ],
                  "body": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "1135:46:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 659,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "1145:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 661,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1163:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1163:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 660,
                              "name": "deployFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "1153:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_payable_$",
                                "typeString": "function (address) returns (address payable)"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1153:21:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1145:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "1145:29:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 653,
                    "nodeType": "StructuredDocumentation",
                    "src": "1029:33:5",
                    "text": "@inheritdoc IPRBProxyRegistry"
                  },
                  "functionSelector": "775c300c",
                  "id": 667,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deploy",
                  "nameLocation": "1076:6:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 655,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1094:8:5"
                  },
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1082:2:5"
                  },
                  "returnParameters": {
                    "id": 658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "1128:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "1112:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1112:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1111:23:5"
                  },
                  "scope": 721,
                  "src": "1067:114:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    160
                  ],
                  "body": {
                    "id": 719,
                    "nodeType": "Block",
                    "src": "1307:501:5",
                    "statements": [
                      {
                        "assignments": [
                          678
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 678,
                            "mutability": "mutable",
                            "name": "currentProxy",
                            "nameLocation": "1327:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 719,
                            "src": "1317:22:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPRBProxy_$70",
                              "typeString": "contract IPRBProxy"
                            },
                            "typeName": {
                              "id": 677,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 676,
                                "name": "IPRBProxy",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 70,
                                "src": "1317:9:5"
                              },
                              "referencedDeclaration": 70,
                              "src": "1317:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPRBProxy_$70",
                                "typeString": "contract IPRBProxy"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 682,
                        "initialValue": {
                          "baseExpression": {
                            "id": 679,
                            "name": "currentProxies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "1342:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IPRBProxy_$70_$",
                              "typeString": "mapping(address => contract IPRBProxy)"
                            }
                          },
                          "id": 681,
                          "indexExpression": {
                            "id": 680,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 670,
                            "src": "1357:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1342:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPRBProxy_$70",
                            "typeString": "contract IPRBProxy"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1317:46:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 685,
                                  "name": "currentProxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 678,
                                  "src": "1466:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPRBProxy_$70",
                                    "typeString": "contract IPRBProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPRBProxy_$70",
                                    "typeString": "contract IPRBProxy"
                                  }
                                ],
                                "id": 684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1458:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 683,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1458:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1458:21:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 689,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1491:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1483:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 687,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1483:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1483:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1458:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 692,
                                  "name": "currentProxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 678,
                                  "src": "1497:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPRBProxy_$70",
                                    "typeString": "contract IPRBProxy"
                                  }
                                },
                                "id": 693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 35,
                                "src": "1497:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1497:20:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 695,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "1521:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1497:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1458:68:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 703,
                        "nodeType": "IfStatement",
                        "src": "1454:149:5",
                        "trueBody": {
                          "id": 702,
                          "nodeType": "Block",
                          "src": "1528:75:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 699,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 670,
                                    "src": "1586:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 698,
                                  "name": "PRBProxyRegistry__ProxyAlreadyExists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 609,
                                  "src": "1549:36:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 700,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1549:43:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 701,
                              "nodeType": "RevertStatement",
                              "src": "1542:50:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 704,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 674,
                            "src": "1658:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 707,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "1684:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 705,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 617,
                                "src": "1666:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPRBProxyFactory_$125",
                                  "typeString": "contract IPRBProxyFactory"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deployFor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 124,
                              "src": "1666:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_payable_$",
                                "typeString": "function (address) external returns (address payable)"
                              }
                            },
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1666:24:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1658:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "1658:32:5"
                      },
                      {
                        "expression": {
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 711,
                              "name": "currentProxies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "1761:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IPRBProxy_$70_$",
                                "typeString": "mapping(address => contract IPRBProxy)"
                              }
                            },
                            "id": 713,
                            "indexExpression": {
                              "id": 712,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 670,
                              "src": "1776:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1761:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPRBProxy_$70",
                              "typeString": "contract IPRBProxy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 715,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "1795:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 714,
                              "name": "IPRBProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "1785:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPRBProxy_$70_$",
                                "typeString": "type(contract IPRBProxy)"
                              }
                            },
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1785:16:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPRBProxy_$70",
                              "typeString": "contract IPRBProxy"
                            }
                          },
                          "src": "1761:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPRBProxy_$70",
                            "typeString": "contract IPRBProxy"
                          }
                        },
                        "id": 718,
                        "nodeType": "ExpressionStatement",
                        "src": "1761:40:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 668,
                    "nodeType": "StructuredDocumentation",
                    "src": "1187:33:5",
                    "text": "@inheritdoc IPRBProxyRegistry"
                  },
                  "functionSelector": "74912cd2",
                  "id": 720,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployFor",
                  "nameLocation": "1234:9:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 672,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1266:8:5"
                  },
                  "parameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 670,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1252:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 720,
                        "src": "1244:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1244:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1243:15:5"
                  },
                  "returnParameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "1300:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 720,
                        "src": "1284:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1284:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1283:23:5"
                  },
                  "scope": 721,
                  "src": "1225:583:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 722,
              "src": "344:1466:5",
              "usedErrors": [
                609
              ]
            }
          ],
          "src": "38:1773:5"
        },
        "id": 5
      }
    }
  }
}
